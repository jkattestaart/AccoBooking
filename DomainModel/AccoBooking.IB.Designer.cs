// ------------------------------------------------------------------------------
// DO NOT MODIFY THIS CLASS - AutoGenerated Code
//    Any changes made to this code will be lost the next time this 
//    code is regenerated.
// 
//    Generated at: 20-10-2014 21:49:21
//    DevForce version: 7.2.3.0
//    Template version: 2.1.4
// ------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using IbEm   = IdeaBlade.EntityModel;
using IbCore = IdeaBlade.Core;
using IbVal  = IdeaBlade.Validation;

[module: IbCore.IdeaBladeLicense("cQbtWquaCgmw+fp2XAnGQjO4RTis0nn4DgDgPAWLEu1NgEvByyd3zXsXsr33F0Sk")]

namespace DomainModel { 

  #region AccoBookingEntities

  /// <summary>
  /// The domain-specific EntityManager for your domain model.
  /// </summary>
  public partial class AccoBookingEntities : IbEm.EntityManager {

    #region Constructors

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public AccoBookingEntities(bool shouldConnect=true, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManagerContext)"/>. </summary>
    public AccoBookingEntities(IbEm.EntityManagerContext entityManagerContext) : base(entityManagerContext) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public AccoBookingEntities(IbEm.EntityManager entityManager, bool shouldConnect, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(entityManager, shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, IbEm.EntityManagerContext)"/>. </summary>
    public AccoBookingEntities(IbEm.EntityManager entityManager, IbEm.EntityManagerContext entityManagerContext=null) : base(entityManager, entityManagerContext) {}

    static AccoBookingEntities() {
      IbEm.EntityRelation.InitializeEntityRelations(IdeaBlade.Core.Reflection.ReflectionExtensions.GetAssembly(typeof(AccoBookingEntities)));
    }
    #endregion Constructors

    #region EntityQueries

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoAddition> AccoAdditions {
      get { return new IbEm.EntityQuery<AccoAddition>("AccoAdditions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoAdditionDescription> AccoAdditionDescriptions {
      get { return new IbEm.EntityQuery<AccoAdditionDescription>("AccoAdditionDescriptions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoCancelCondition> AccoCancelConditions {
      get { return new IbEm.EntityQuery<AccoCancelCondition>("AccoCancelConditions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoNotification> AccoNotifications {
      get { return new IbEm.EntityQuery<AccoNotification>("AccoNotifications", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoOwner> AccoOwners {
      get { return new IbEm.EntityQuery<AccoOwner>("AccoOwners", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoPayPattern> AccoPayPatterns {
      get { return new IbEm.EntityQuery<AccoPayPattern>("AccoPayPatterns", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoPayPatternPayment> AccoPayPatternPayments {
      get { return new IbEm.EntityQuery<AccoPayPatternPayment>("AccoPayPatternPayments", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoReminder> AccoReminders {
      get { return new IbEm.EntityQuery<AccoReminder>("AccoReminders", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoRent> AccoRents {
      get { return new IbEm.EntityQuery<AccoRent>("AccoRents", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoSeason> AccoSeasons {
      get { return new IbEm.EntityQuery<AccoSeason>("AccoSeasons", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoSpecialOffer> AccoSpecialOffers {
      get { return new IbEm.EntityQuery<AccoSpecialOffer>("AccoSpecialOffers", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoTrustee> AccoTrustees {
      get { return new IbEm.EntityQuery<AccoTrustee>("AccoTrustees", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BookingAddition> BookingAdditions {
      get { return new IbEm.EntityQuery<BookingAddition>("BookingAdditions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BookingCancelCondition> BookingCancelConditions {
      get { return new IbEm.EntityQuery<BookingCancelCondition>("BookingCancelConditions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BookingGuest> BookingGuests {
      get { return new IbEm.EntityQuery<BookingGuest>("BookingGuests", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BookingPayment> BookingPayments {
      get { return new IbEm.EntityQuery<BookingPayment>("BookingPayments", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BookingReminder> BookingReminders {
      get { return new IbEm.EntityQuery<BookingReminder>("BookingReminders", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Country> Countries {
      get { return new IbEm.EntityQuery<Country>("Countries", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Language> Languages {
      get { return new IbEm.EntityQuery<Language>("Languages", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<MailTemplate> MailTemplates {
      get { return new IbEm.EntityQuery<MailTemplate>("MailTemplates", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Sequence> Sequences {
      get { return new IbEm.EntityQuery<Sequence>("Sequences", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<sysdiagram> sysdiagrams {
      get { return new IbEm.EntityQuery<sysdiagram>("sysdiagrams", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<SystemCode> SystemCodes {
      get { return new IbEm.EntityQuery<SystemCode>("SystemCodes", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<SystemGroup> SystemGroups {
      get { return new IbEm.EntityQuery<SystemGroup>("SystemGroups", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Currency> Currencies {
      get { return new IbEm.EntityQuery<Currency>("Currencies", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoDescription> AccoDescriptions {
      get { return new IbEm.EntityQuery<AccoDescription>("AccoDescriptions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Booking> Bookings {
      get { return new IbEm.EntityQuery<Booking>("Bookings", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<AccoAttachment> AccoAttachments {
      get { return new IbEm.EntityQuery<AccoAttachment>("AccoAttachments", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Acco> Accoes {
      get { return new IbEm.EntityQuery<Acco>("Accoes", this); }
    }
    #endregion EntityQueries
  }
  #endregion AccoBookingEntities

  #region AccoAddition class

  /// <summary>The auto-generated AccoAddition class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoAdditions")]
  public partial class AccoAddition : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoAddition, object>> expr) {
      return IbCore.PropertyPath.For<AccoAddition>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoAdditionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoAdditionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_AccoAdditionId")]
    public int AccoAdditionId {
      get { return PropertyMetadata.AccoAdditionId.GetValue(this); }
      set { PropertyMetadata.AccoAdditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Price. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Price", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_Price")]
    public decimal Price {
      get { return PropertyMetadata.Price.GetValue(this); }
      set { PropertyMetadata.Price.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Unit. </summary>
    [DataMember]
    [IbVal.RequiredValueVerifier(ErrorMessageResourceName = "AccoAddition_Unit_Required", ErrorMessageResourceType = typeof(AccoResource))]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Unit", AutoGenerateField=true)]
    public string Unit {
      get { return PropertyMetadata.Unit.GetValue(this); }
      set { PropertyMetadata.Unit.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsDefaultBooked. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsDefaultBooked", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_IsDefaultBooked")]
    public bool IsDefaultBooked {
      get { return PropertyMetadata.IsDefaultBooked.GetValue(this); }
      set { PropertyMetadata.IsDefaultBooked.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsPaidFromDeposit. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsPaidFromDeposit", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAddition_IsPaidFromDeposit")]
    public bool IsPaidFromDeposit {
      get { return PropertyMetadata.IsPaidFromDeposit.GetValue(this); }
      set { PropertyMetadata.IsPaidFromDeposit.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoAdditionDescriptions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAdditionDescriptions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoAdditionDescription> AccoAdditionDescriptions {
      get { return PropertyMetadata.AccoAdditionDescriptions.GetValue(this); }
    }

    /// <summary>Gets the BookingAdditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingAdditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingAddition> BookingAdditions {
      get { return PropertyMetadata.BookingAdditions.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoAdditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, int> AccoAdditionId = new IbEm.DataEntityProperty<AccoAddition, int>("AccoAdditionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, int> AccoId = new IbEm.DataEntityProperty<AccoAddition, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, int> DisplaySequence = new IbEm.DataEntityProperty<AccoAddition, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Price <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, decimal> Price = new IbEm.DataEntityProperty<AccoAddition, decimal>("Price", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Unit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, string> Unit = new IbEm.DataEntityProperty<AccoAddition, string>("Unit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsDefaultBooked <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, bool> IsDefaultBooked = new IbEm.DataEntityProperty<AccoAddition, bool>("IsDefaultBooked", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, string> CreatedUser = new IbEm.DataEntityProperty<AccoAddition, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoAddition, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, string> ModifyUser = new IbEm.DataEntityProperty<AccoAddition, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoAddition, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsPaidFromDeposit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAddition, bool> IsPaidFromDeposit = new IbEm.DataEntityProperty<AccoAddition, bool>("IsPaidFromDeposit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAdditionDescriptions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoAddition, AccoAdditionDescription> AccoAdditionDescriptions = new IbEm.NavigationListEntityProperty<AccoAddition, AccoAdditionDescription>("AccoAdditionDescriptions", true, "FK_AccoAdditionDescription_AccoAddition", IbEm.QueryDirection.ToRole1);

      /// <summary>The BookingAdditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoAddition, BookingAddition> BookingAdditions = new IbEm.NavigationListEntityProperty<AccoAddition, BookingAddition>("BookingAdditions", true, "FK_BookingAddition_AccoAddition", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoAddition, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoAddition, Acco>("Acco", true, "FK_AccoAddition_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoAdditionId = "AccoAdditionId";
      public const String AccoId = "AccoId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Price = "Price";
      public const String Unit = "Unit";
      public const String IsDefaultBooked = "IsDefaultBooked";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String IsPaidFromDeposit = "IsPaidFromDeposit";
      public const String AccoAdditionDescriptions = "AccoAdditionDescriptions";
      public const String BookingAdditions = "BookingAdditions";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoAddition class

  #region AccoAdditionDescription class

  /// <summary>The auto-generated AccoAdditionDescription class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoAdditionDescriptions")]
  public partial class AccoAdditionDescription : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoAdditionDescription, object>> expr) {
      return IbCore.PropertyPath.For<AccoAdditionDescription>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoAdditionDescriptionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoAdditionDescriptionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAdditionDescription_AccoAdditionDescriptionId")]
    public int AccoAdditionDescriptionId {
      get { return PropertyMetadata.AccoAdditionDescriptionId.GetValue(this); }
      set { PropertyMetadata.AccoAdditionDescriptionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoAdditionId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoAdditionId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAdditionDescription_AccoAdditionId")]
    public int AccoAdditionId {
      get { return PropertyMetadata.AccoAdditionId.GetValue(this); }
      set { PropertyMetadata.AccoAdditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LanguageId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="LanguageId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAdditionDescription_LanguageId")]
    public int LanguageId {
      get { return PropertyMetadata.LanguageId.GetValue(this); }
      set { PropertyMetadata.LanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAdditionDescription_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoAddition. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAddition", AutoGenerateField=false)]
    public AccoAddition AccoAddition {
      get { return PropertyMetadata.AccoAddition.GetValue(this); }
      set { PropertyMetadata.AccoAddition.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Language. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Language", AutoGenerateField=false)]
    public Language Language {
      get { return PropertyMetadata.Language.GetValue(this); }
      set { PropertyMetadata.Language.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoAdditionDescriptionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, int> AccoAdditionDescriptionId = new IbEm.DataEntityProperty<AccoAdditionDescription, int>("AccoAdditionDescriptionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAdditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, int> AccoAdditionId = new IbEm.DataEntityProperty<AccoAdditionDescription, int>("AccoAdditionId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoAddition");

      /// <summary>The LanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, int> LanguageId = new IbEm.DataEntityProperty<AccoAdditionDescription, int>("LanguageId", false, false, IbEm.ConcurrencyStrategy.None, false, "Language");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, string> Description = new IbEm.DataEntityProperty<AccoAdditionDescription, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, string> CreatedUser = new IbEm.DataEntityProperty<AccoAdditionDescription, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, string> ModifyUser = new IbEm.DataEntityProperty<AccoAdditionDescription, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoAdditionDescription, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAddition <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoAdditionDescription, AccoAddition> AccoAddition = new IbEm.NavigationScalarEntityProperty<AccoAdditionDescription, AccoAddition>("AccoAddition", true, "FK_AccoAdditionDescription_AccoAddition", IbEm.QueryDirection.ToRole2);

      /// <summary>The Language <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoAdditionDescription, Language> Language = new IbEm.NavigationScalarEntityProperty<AccoAdditionDescription, Language>("Language", true, "FK_AccoAdditionDescription_Language", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoAdditionDescriptionId = "AccoAdditionDescriptionId";
      public const String AccoAdditionId = "AccoAdditionId";
      public const String LanguageId = "LanguageId";
      public const String Description = "Description";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoAddition = "AccoAddition";
      public const String Language = "Language";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoAdditionDescription class

  #region AccoCancelCondition class

  /// <summary>The auto-generated AccoCancelCondition class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoCancelConditions")]
  public partial class AccoCancelCondition : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoCancelCondition, object>> expr) {
      return IbCore.PropertyPath.For<AccoCancelCondition>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoCancelConditionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoCancelConditionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoCancelCondition_AccoCancelConditionId")]
    public int AccoCancelConditionId {
      get { return PropertyMetadata.AccoCancelConditionId.GetValue(this); }
      set { PropertyMetadata.AccoCancelConditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoCancelCondition_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysBeforeArrival. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysBeforeArrival", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoCancelCondition_DaysBeforeArrival")]
    public int DaysBeforeArrival {
      get { return PropertyMetadata.DaysBeforeArrival.GetValue(this); }
      set { PropertyMetadata.DaysBeforeArrival.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPercentageToPay. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPercentageToPay", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoCancelCondition_RentPercentageToPay")]
    public int RentPercentageToPay {
      get { return PropertyMetadata.RentPercentageToPay.GetValue(this); }
      set { PropertyMetadata.RentPercentageToPay.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the BookingCancelConditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingCancelConditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingCancelCondition> BookingCancelConditions {
      get { return PropertyMetadata.BookingCancelConditions.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoCancelConditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, int> AccoCancelConditionId = new IbEm.DataEntityProperty<AccoCancelCondition, int>("AccoCancelConditionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, int> AccoId = new IbEm.DataEntityProperty<AccoCancelCondition, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The DaysBeforeArrival <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, int> DaysBeforeArrival = new IbEm.DataEntityProperty<AccoCancelCondition, int>("DaysBeforeArrival", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPercentageToPay <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, int> RentPercentageToPay = new IbEm.DataEntityProperty<AccoCancelCondition, int>("RentPercentageToPay", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, string> CreatedUser = new IbEm.DataEntityProperty<AccoCancelCondition, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, string> ModifyUser = new IbEm.DataEntityProperty<AccoCancelCondition, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoCancelCondition, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingCancelConditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoCancelCondition, BookingCancelCondition> BookingCancelConditions = new IbEm.NavigationListEntityProperty<AccoCancelCondition, BookingCancelCondition>("BookingCancelConditions", true, "FK_BookingCancelCondition_AccoCancelCondition", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoCancelCondition, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoCancelCondition, Acco>("Acco", true, "FK_AccoCancelCondition_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoCancelConditionId = "AccoCancelConditionId";
      public const String AccoId = "AccoId";
      public const String DaysBeforeArrival = "DaysBeforeArrival";
      public const String RentPercentageToPay = "RentPercentageToPay";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String BookingCancelConditions = "BookingCancelConditions";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoCancelCondition class

  #region AccoNotification class

  /// <summary>The auto-generated AccoNotification class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoNotifications")]
  public partial class AccoNotification : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoNotification, object>> expr) {
      return IbCore.PropertyPath.For<AccoNotification>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoNotificationId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoNotificationId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_AccoNotificationId")]
    public int AccoNotificationId {
      get { return PropertyMetadata.AccoNotificationId.GetValue(this); }
      set { PropertyMetadata.AccoNotificationId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoOwnerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoOwnerId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_AccoOwnerId")]
    public int AccoOwnerId {
      get { return PropertyMetadata.AccoOwnerId.GetValue(this); }
      set { PropertyMetadata.AccoOwnerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    public System.Nullable<int> BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the NoticationType. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="NoticationType", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoNotification_NoticationType")]
    public string NoticationType {
      get { return PropertyMetadata.NoticationType.GetValue(this); }
      set { PropertyMetadata.NoticationType.SetValue(this, value); }
    }

    /// <summary>Gets or sets the NotificationDate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="NotificationDate", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_NotificationDate")]
    public System.DateTime NotificationDate {
      get { return PropertyMetadata.NotificationDate.GetValue(this); }
      set { PropertyMetadata.NotificationDate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsNotified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsNotified", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_IsNotified")]
    public bool IsNotified {
      get { return PropertyMetadata.IsNotified.GetValue(this); }
      set { PropertyMetadata.IsNotified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ExpirationDate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ExpirationDate", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_ExpirationDate")]
    public System.DateTime ExpirationDate {
      get { return PropertyMetadata.ExpirationDate.GetValue(this); }
      set { PropertyMetadata.ExpirationDate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaystoExpire. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaystoExpire", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoNotification_DaystoExpire")]
    public int DaystoExpire {
      get { return PropertyMetadata.DaystoExpire.GetValue(this); }
      set { PropertyMetadata.DaystoExpire.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoOwner. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoOwner", AutoGenerateField=false)]
    public AccoOwner AccoOwner {
      get { return PropertyMetadata.AccoOwner.GetValue(this); }
      set { PropertyMetadata.AccoOwner.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoNotificationId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, int> AccoNotificationId = new IbEm.DataEntityProperty<AccoNotification, int>("AccoNotificationId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, int> AccoId = new IbEm.DataEntityProperty<AccoNotification, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The AccoOwnerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, int> AccoOwnerId = new IbEm.DataEntityProperty<AccoNotification, int>("AccoOwnerId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoOwner");

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, System.Nullable<int>> BookingId = new IbEm.DataEntityProperty<AccoNotification, System.Nullable<int>>("BookingId", true, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The NoticationType <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, string> NoticationType = new IbEm.DataEntityProperty<AccoNotification, string>("NoticationType", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The NotificationDate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, System.DateTime> NotificationDate = new IbEm.DataEntityProperty<AccoNotification, System.DateTime>("NotificationDate", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsNotified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, bool> IsNotified = new IbEm.DataEntityProperty<AccoNotification, bool>("IsNotified", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, string> Description = new IbEm.DataEntityProperty<AccoNotification, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ExpirationDate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, System.DateTime> ExpirationDate = new IbEm.DataEntityProperty<AccoNotification, System.DateTime>("ExpirationDate", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaystoExpire <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoNotification, int> DaystoExpire = new IbEm.DataEntityProperty<AccoNotification, int>("DaystoExpire", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwner <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoNotification, AccoOwner> AccoOwner = new IbEm.NavigationScalarEntityProperty<AccoNotification, AccoOwner>("AccoOwner", true, "FK_AccoNotification_AccoOwner", IbEm.QueryDirection.ToRole2);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoNotification, Booking> Booking = new IbEm.NavigationScalarEntityProperty<AccoNotification, Booking>("Booking", true, "FK_AccoNotification_Booking", IbEm.QueryDirection.ToRole2);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoNotification, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoNotification, Acco>("Acco", true, "FK_AccoNotification_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoNotificationId = "AccoNotificationId";
      public const String AccoId = "AccoId";
      public const String AccoOwnerId = "AccoOwnerId";
      public const String BookingId = "BookingId";
      public const String NoticationType = "NoticationType";
      public const String NotificationDate = "NotificationDate";
      public const String IsNotified = "IsNotified";
      public const String Description = "Description";
      public const String ExpirationDate = "ExpirationDate";
      public const String DaystoExpire = "DaystoExpire";
      public const String AccoOwner = "AccoOwner";
      public const String Booking = "Booking";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoNotification class

  #region AccoOwner class

  /// <summary>The auto-generated AccoOwner class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoOwners")]
  public partial class AccoOwner : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoOwner, object>> expr) {
      return IbCore.PropertyPath.For<AccoOwner>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoOwnerId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoOwnerId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoOwner_AccoOwnerId")]
    public int AccoOwnerId {
      get { return PropertyMetadata.AccoOwnerId.GetValue(this); }
      set { PropertyMetadata.AccoOwnerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LanguageId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="LanguageId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoOwner_LanguageId")]
    public int LanguageId {
      get { return PropertyMetadata.LanguageId.GetValue(this); }
      set { PropertyMetadata.LanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CountryId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="CountryId", AutoGenerateField=false)]
    public System.Nullable<int> CountryId {
      get { return PropertyMetadata.CountryId.GetValue(this); }
      set { PropertyMetadata.CountryId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoOwner_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Email. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Email", AutoGenerateField=true)]
    public string Email {
      get { return PropertyMetadata.Email.GetValue(this); }
      set { PropertyMetadata.Email.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Phone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Phone", AutoGenerateField=true)]
    public string Phone {
      get { return PropertyMetadata.Phone.GetValue(this); }
      set { PropertyMetadata.Phone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Login. </summary>
    [DataMember]
    [IbVal.RequiredValueVerifier(ErrorMessageResourceName = "Acco_Login_Required", ErrorMessageResourceType = typeof(AccoResource))]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Login", AutoGenerateField=true)]
    public string Login {
      get { return PropertyMetadata.Login.GetValue(this); }
      set { PropertyMetadata.Login.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Password. </summary>
    [DataMember]
    [IbVal.RequiredValueVerifier(ErrorMessageResourceName = "Acco_Password_Required", ErrorMessageResourceType = typeof(AccoResource))]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Password", AutoGenerateField=true)]
    public string Password {
      get { return PropertyMetadata.Password.GetValue(this); }
      set { PropertyMetadata.Password.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicName", AutoGenerateField=true)]
    public string PublicName {
      get { return PropertyMetadata.PublicName.GetValue(this); }
      set { PropertyMetadata.PublicName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicEmail. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicEmail", AutoGenerateField=true)]
    public string PublicEmail {
      get { return PropertyMetadata.PublicEmail.GetValue(this); }
      set { PropertyMetadata.PublicEmail.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicPhone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicPhone", AutoGenerateField=true)]
    public string PublicPhone {
      get { return PropertyMetadata.PublicPhone.GetValue(this); }
      set { PropertyMetadata.PublicPhone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicAddress1. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicAddress1", AutoGenerateField=true)]
    public string PublicAddress1 {
      get { return PropertyMetadata.PublicAddress1.GetValue(this); }
      set { PropertyMetadata.PublicAddress1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicAddress2. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicAddress2", AutoGenerateField=true)]
    public string PublicAddress2 {
      get { return PropertyMetadata.PublicAddress2.GetValue(this); }
      set { PropertyMetadata.PublicAddress2.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicAddress3. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicAddress3", AutoGenerateField=true)]
    public string PublicAddress3 {
      get { return PropertyMetadata.PublicAddress3.GetValue(this); }
      set { PropertyMetadata.PublicAddress3.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicCountryId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicCountryId", AutoGenerateField=true)]
    public System.Nullable<int> PublicCountryId {
      get { return PropertyMetadata.PublicCountryId.GetValue(this); }
      set { PropertyMetadata.PublicCountryId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicBank. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicBank", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="AccoOwner_PublicBank")]
    public string PublicBank {
      get { return PropertyMetadata.PublicBank.GetValue(this); }
      set { PropertyMetadata.PublicBank.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PublicBankAccount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PublicBankAccount", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="AccoOwner_PublicBankAccount")]
    public string PublicBankAccount {
      get { return PropertyMetadata.PublicBankAccount.GetValue(this); }
      set { PropertyMetadata.PublicBankAccount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoNotifications. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoNotifications", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoNotification> AccoNotifications {
      get { return PropertyMetadata.AccoNotifications.GetValue(this); }
    }

    /// <summary>Gets or sets the Country. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Country", AutoGenerateField=false)]
    public Country Country {
      get { return PropertyMetadata.Country.GetValue(this); }
      set { PropertyMetadata.Country.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Language. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Language", AutoGenerateField=false)]
    public Language Language {
      get { return PropertyMetadata.Language.GetValue(this); }
      set { PropertyMetadata.Language.SetValue(this, value); }
    }

    /// <summary>Gets the AccoTrustees. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoTrustees", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoTrustee> AccoTrustees {
      get { return PropertyMetadata.AccoTrustees.GetValue(this); }
    }

    /// <summary>Gets the Accoes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Accoes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Acco> Accoes {
      get { return PropertyMetadata.Accoes.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoOwnerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, int> AccoOwnerId = new IbEm.DataEntityProperty<AccoOwner, int>("AccoOwnerId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, int> LanguageId = new IbEm.DataEntityProperty<AccoOwner, int>("LanguageId", false, false, IbEm.ConcurrencyStrategy.None, false, "Language");

      /// <summary>The CountryId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>> CountryId = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>>("CountryId", true, false, IbEm.ConcurrencyStrategy.None, false, "Country");

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> Name = new IbEm.DataEntityProperty<AccoOwner, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Email <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> Email = new IbEm.DataEntityProperty<AccoOwner, string>("Email", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Phone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> Phone = new IbEm.DataEntityProperty<AccoOwner, string>("Phone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Login <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> Login = new IbEm.DataEntityProperty<AccoOwner, string>("Login", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Password <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> Password = new IbEm.DataEntityProperty<AccoOwner, string>("Password", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicName = new IbEm.DataEntityProperty<AccoOwner, string>("PublicName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicEmail <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicEmail = new IbEm.DataEntityProperty<AccoOwner, string>("PublicEmail", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicPhone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicPhone = new IbEm.DataEntityProperty<AccoOwner, string>("PublicPhone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicAddress1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicAddress1 = new IbEm.DataEntityProperty<AccoOwner, string>("PublicAddress1", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicAddress2 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicAddress2 = new IbEm.DataEntityProperty<AccoOwner, string>("PublicAddress2", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicAddress3 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicAddress3 = new IbEm.DataEntityProperty<AccoOwner, string>("PublicAddress3", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicCountryId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>> PublicCountryId = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>>("PublicCountryId", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicBank <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicBank = new IbEm.DataEntityProperty<AccoOwner, string>("PublicBank", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PublicBankAccount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> PublicBankAccount = new IbEm.DataEntityProperty<AccoOwner, string>("PublicBankAccount", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> CreatedUser = new IbEm.DataEntityProperty<AccoOwner, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, string> ModifyUser = new IbEm.DataEntityProperty<AccoOwner, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoOwner, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoNotifications <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoOwner, AccoNotification> AccoNotifications = new IbEm.NavigationListEntityProperty<AccoOwner, AccoNotification>("AccoNotifications", true, "FK_AccoNotification_AccoOwner", IbEm.QueryDirection.ToRole1);

      /// <summary>The Country <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoOwner, Country> Country = new IbEm.NavigationScalarEntityProperty<AccoOwner, Country>("Country", true, "FK_AccoOwner_AccoCountry", IbEm.QueryDirection.ToRole2);

      /// <summary>The Language <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoOwner, Language> Language = new IbEm.NavigationScalarEntityProperty<AccoOwner, Language>("Language", true, "FK_AccoOwner_AccoLanguage", IbEm.QueryDirection.ToRole2);

      /// <summary>The AccoTrustees <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoOwner, AccoTrustee> AccoTrustees = new IbEm.NavigationListEntityProperty<AccoOwner, AccoTrustee>("AccoTrustees", true, "FK_Trustee_AccoOwner", IbEm.QueryDirection.ToRole1);

      /// <summary>The Accoes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoOwner, Acco> Accoes = new IbEm.NavigationListEntityProperty<AccoOwner, Acco>("Accoes", true, "FK_Acco_AccoOwner", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoOwnerId = "AccoOwnerId";
      public const String LanguageId = "LanguageId";
      public const String CountryId = "CountryId";
      public const String Name = "Name";
      public const String Email = "Email";
      public const String Phone = "Phone";
      public const String Login = "Login";
      public const String Password = "Password";
      public const String PublicName = "PublicName";
      public const String PublicEmail = "PublicEmail";
      public const String PublicPhone = "PublicPhone";
      public const String PublicAddress1 = "PublicAddress1";
      public const String PublicAddress2 = "PublicAddress2";
      public const String PublicAddress3 = "PublicAddress3";
      public const String PublicCountryId = "PublicCountryId";
      public const String PublicBank = "PublicBank";
      public const String PublicBankAccount = "PublicBankAccount";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoNotifications = "AccoNotifications";
      public const String Country = "Country";
      public const String Language = "Language";
      public const String AccoTrustees = "AccoTrustees";
      public const String Accoes = "Accoes";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoOwner class

  #region AccoPayPattern class

  /// <summary>The auto-generated AccoPayPattern class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoPayPatterns")]
  public partial class AccoPayPattern : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoPayPattern, object>> expr) {
      return IbCore.PropertyPath.For<AccoPayPattern>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoPayPatternId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoPayPatternId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPattern_AccoPayPatternId")]
    public int AccoPayPatternId {
      get { return PropertyMetadata.AccoPayPatternId.GetValue(this); }
      set { PropertyMetadata.AccoPayPatternId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPattern_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPattern_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsAdditionInLastPayment. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsAdditionInLastPayment", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPattern_IsAdditionInLastPayment")]
    public bool IsAdditionInLastPayment {
      get { return PropertyMetadata.IsAdditionInLastPayment.GetValue(this); }
      set { PropertyMetadata.IsAdditionInLastPayment.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsDepositInLastPayment. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsDepositInLastPayment", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPattern_IsDepositInLastPayment")]
    public bool IsDepositInLastPayment {
      get { return PropertyMetadata.IsDepositInLastPayment.GetValue(this); }
      set { PropertyMetadata.IsDepositInLastPayment.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysBeforeArrival. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysBeforeArrival", AutoGenerateField=true)]
    public System.Nullable<int> DaysBeforeArrival {
      get { return PropertyMetadata.DaysBeforeArrival.GetValue(this); }
      set { PropertyMetadata.DaysBeforeArrival.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoPayPatternPayments. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoPayPatternPayments", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoPayPatternPayment> AccoPayPatternPayments {
      get { return PropertyMetadata.AccoPayPatternPayments.GetValue(this); }
    }

    /// <summary>Gets the Accoes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Accoes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Acco> Accoes {
      get { return PropertyMetadata.Accoes.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoPayPatternId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, int> AccoPayPatternId = new IbEm.DataEntityProperty<AccoPayPattern, int>("AccoPayPatternId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, int> AccoId = new IbEm.DataEntityProperty<AccoPayPattern, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, int> DisplaySequence = new IbEm.DataEntityProperty<AccoPayPattern, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, string> Description = new IbEm.DataEntityProperty<AccoPayPattern, string>("Description", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsAdditionInLastPayment <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, bool> IsAdditionInLastPayment = new IbEm.DataEntityProperty<AccoPayPattern, bool>("IsAdditionInLastPayment", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsDepositInLastPayment <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, bool> IsDepositInLastPayment = new IbEm.DataEntityProperty<AccoPayPattern, bool>("IsDepositInLastPayment", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaysBeforeArrival <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<int>> DaysBeforeArrival = new IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<int>>("DaysBeforeArrival", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, string> CreatedUser = new IbEm.DataEntityProperty<AccoPayPattern, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, string> ModifyUser = new IbEm.DataEntityProperty<AccoPayPattern, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoPayPattern, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoPayPatternPayments <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoPayPattern, AccoPayPatternPayment> AccoPayPatternPayments = new IbEm.NavigationListEntityProperty<AccoPayPattern, AccoPayPatternPayment>("AccoPayPatternPayments", true, "FK_AccoPayPatternPayment_AccoPayPattern", IbEm.QueryDirection.ToRole1);

      /// <summary>The Accoes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoPayPattern, Acco> Accoes = new IbEm.NavigationListEntityProperty<AccoPayPattern, Acco>("Accoes", true, "FK_Acco_AccoPayPattern", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoPayPattern, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoPayPattern, Acco>("Acco", true, "FK_AccoPayPattern_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoPayPatternId = "AccoPayPatternId";
      public const String AccoId = "AccoId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Description = "Description";
      public const String IsAdditionInLastPayment = "IsAdditionInLastPayment";
      public const String IsDepositInLastPayment = "IsDepositInLastPayment";
      public const String DaysBeforeArrival = "DaysBeforeArrival";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoPayPatternPayments = "AccoPayPatternPayments";
      public const String Accoes = "Accoes";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoPayPattern class

  #region AccoPayPatternPayment class

  /// <summary>The auto-generated AccoPayPatternPayment class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoPayPatternPayments")]
  public partial class AccoPayPatternPayment : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoPayPatternPayment, object>> expr) {
      return IbCore.PropertyPath.For<AccoPayPatternPayment>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoPayPatternPaymentId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoPayPatternPaymentId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_AccoPayPatternPaymentId")]
    public int AccoPayPatternPaymentId {
      get { return PropertyMetadata.AccoPayPatternPaymentId.GetValue(this); }
      set { PropertyMetadata.AccoPayPatternPaymentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoPayPatternId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoPayPatternId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_AccoPayPatternId")]
    public int AccoPayPatternId {
      get { return PropertyMetadata.AccoPayPatternId.GetValue(this); }
      set { PropertyMetadata.AccoPayPatternId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysToPayAfterBooking. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysToPayAfterBooking", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_DaysToPayAfterBooking")]
    public int DaysToPayAfterBooking {
      get { return PropertyMetadata.DaysToPayAfterBooking.GetValue(this); }
      set { PropertyMetadata.DaysToPayAfterBooking.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysToPayBeforeArrival. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysToPayBeforeArrival", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_DaysToPayBeforeArrival")]
    public int DaysToPayBeforeArrival {
      get { return PropertyMetadata.DaysToPayBeforeArrival.GetValue(this); }
      set { PropertyMetadata.DaysToPayBeforeArrival.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PaymentAmount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PaymentAmount", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_PaymentAmount")]
    public decimal PaymentAmount {
      get { return PropertyMetadata.PaymentAmount.GetValue(this); }
      set { PropertyMetadata.PaymentAmount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PaymentPercentage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PaymentPercentage", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_PaymentPercentage")]
    public int PaymentPercentage {
      get { return PropertyMetadata.PaymentPercentage.GetValue(this); }
      set { PropertyMetadata.PaymentPercentage.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoPayPatternPayment_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoPayPattern. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoPayPattern", AutoGenerateField=false)]
    public AccoPayPattern AccoPayPattern {
      get { return PropertyMetadata.AccoPayPattern.GetValue(this); }
      set { PropertyMetadata.AccoPayPattern.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoPayPatternPaymentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> AccoPayPatternPaymentId = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("AccoPayPatternPaymentId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoPayPatternId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> AccoPayPatternId = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("AccoPayPatternId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoPayPattern");

      /// <summary>The DaysToPayAfterBooking <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> DaysToPayAfterBooking = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("DaysToPayAfterBooking", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaysToPayBeforeArrival <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> DaysToPayBeforeArrival = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("DaysToPayBeforeArrival", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PaymentAmount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, decimal> PaymentAmount = new IbEm.DataEntityProperty<AccoPayPatternPayment, decimal>("PaymentAmount", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PaymentPercentage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> PaymentPercentage = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("PaymentPercentage", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, int> DisplaySequence = new IbEm.DataEntityProperty<AccoPayPatternPayment, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, string> CreatedUser = new IbEm.DataEntityProperty<AccoPayPatternPayment, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, string> ModifyUser = new IbEm.DataEntityProperty<AccoPayPatternPayment, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoPayPatternPayment, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoPayPattern <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoPayPatternPayment, AccoPayPattern> AccoPayPattern = new IbEm.NavigationScalarEntityProperty<AccoPayPatternPayment, AccoPayPattern>("AccoPayPattern", true, "FK_AccoPayPatternPayment_AccoPayPattern", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoPayPatternPaymentId = "AccoPayPatternPaymentId";
      public const String AccoPayPatternId = "AccoPayPatternId";
      public const String DaysToPayAfterBooking = "DaysToPayAfterBooking";
      public const String DaysToPayBeforeArrival = "DaysToPayBeforeArrival";
      public const String PaymentAmount = "PaymentAmount";
      public const String PaymentPercentage = "PaymentPercentage";
      public const String DisplaySequence = "DisplaySequence";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoPayPattern = "AccoPayPattern";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoPayPatternPayment class

  #region AccoReminder class

  /// <summary>The auto-generated AccoReminder class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoReminders")]
  public partial class AccoReminder : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoReminder, object>> expr) {
      return IbCore.PropertyPath.For<AccoReminder>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoReminderId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoReminderId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoReminder_AccoReminderId")]
    public int AccoReminderId {
      get { return PropertyMetadata.AccoReminderId.GetValue(this); }
      set { PropertyMetadata.AccoReminderId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoReminder_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoReminder_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoReminder_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Milestone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Milestone", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoReminder_Milestone")]
    public string Milestone {
      get { return PropertyMetadata.Milestone.GetValue(this); }
      set { PropertyMetadata.Milestone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Offset. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Offset", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoReminder_Offset")]
    public int Offset {
      get { return PropertyMetadata.Offset.GetValue(this); }
      set { PropertyMetadata.Offset.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the BookingReminders. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingReminders", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingReminder> BookingReminders {
      get { return PropertyMetadata.BookingReminders.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoReminderId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, int> AccoReminderId = new IbEm.DataEntityProperty<AccoReminder, int>("AccoReminderId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, int> AccoId = new IbEm.DataEntityProperty<AccoReminder, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, int> DisplaySequence = new IbEm.DataEntityProperty<AccoReminder, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, string> Description = new IbEm.DataEntityProperty<AccoReminder, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Milestone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, string> Milestone = new IbEm.DataEntityProperty<AccoReminder, string>("Milestone", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Offset <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, int> Offset = new IbEm.DataEntityProperty<AccoReminder, int>("Offset", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, string> CreatedUser = new IbEm.DataEntityProperty<AccoReminder, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<AccoReminder, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, string> ModifyUser = new IbEm.DataEntityProperty<AccoReminder, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoReminder, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<AccoReminder, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingReminders <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoReminder, BookingReminder> BookingReminders = new IbEm.NavigationListEntityProperty<AccoReminder, BookingReminder>("BookingReminders", true, "FK_BookingReminder_AccoReminder", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoReminder, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoReminder, Acco>("Acco", true, "FK_AccoReminder_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoReminderId = "AccoReminderId";
      public const String AccoId = "AccoId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Description = "Description";
      public const String Milestone = "Milestone";
      public const String Offset = "Offset";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String BookingReminders = "BookingReminders";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoReminder class

  #region AccoRent class

  /// <summary>The auto-generated AccoRent class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoRents")]
  public partial class AccoRent : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoRent, object>> expr) {
      return IbCore.PropertyPath.For<AccoRent>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoRentId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoRentId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_AccoRentId")]
    public int AccoRentId {
      get { return PropertyMetadata.AccoRentId.GetValue(this); }
      set { PropertyMetadata.AccoRentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoRent_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsAvailablePerNight. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsAvailablePerNight", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_IsAvailablePerNight")]
    public bool IsAvailablePerNight {
      get { return PropertyMetadata.IsAvailablePerNight.GetValue(this); }
      set { PropertyMetadata.IsAvailablePerNight.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPerNight. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPerNight", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_RentPerNight")]
    public decimal RentPerNight {
      get { return PropertyMetadata.RentPerNight.GetValue(this); }
      set { PropertyMetadata.RentPerNight.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MinimalNights. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MinimalNights", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_MinimalNights")]
    public int MinimalNights {
      get { return PropertyMetadata.MinimalNights.GetValue(this); }
      set { PropertyMetadata.MinimalNights.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsAvailablePerWeekend. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsAvailablePerWeekend", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_IsAvailablePerWeekend")]
    public bool IsAvailablePerWeekend {
      get { return PropertyMetadata.IsAvailablePerWeekend.GetValue(this); }
      set { PropertyMetadata.IsAvailablePerWeekend.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPerWeekend. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPerWeekend", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_RentPerWeekend")]
    public decimal RentPerWeekend {
      get { return PropertyMetadata.RentPerWeekend.GetValue(this); }
      set { PropertyMetadata.RentPerWeekend.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPerMidweek. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPerMidweek", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_RentPerMidweek")]
    public decimal RentPerMidweek {
      get { return PropertyMetadata.RentPerMidweek.GetValue(this); }
      set { PropertyMetadata.RentPerMidweek.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsAvailablePerWeek. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsAvailablePerWeek", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_IsAvailablePerWeek")]
    public bool IsAvailablePerWeek {
      get { return PropertyMetadata.IsAvailablePerWeek.GetValue(this); }
      set { PropertyMetadata.IsAvailablePerWeek.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPerWeek. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPerWeek", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_RentPerWeek")]
    public decimal RentPerWeek {
      get { return PropertyMetadata.RentPerWeek.GetValue(this); }
      set { PropertyMetadata.RentPerWeek.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MinimalWeeks. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MinimalWeeks", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_MinimalWeeks")]
    public int MinimalWeeks {
      get { return PropertyMetadata.MinimalWeeks.GetValue(this); }
      set { PropertyMetadata.MinimalWeeks.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WeekExchangeDay. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WeekExchangeDay", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="AccoRent_WeekExchangeDay")]
    public string WeekExchangeDay {
      get { return PropertyMetadata.WeekExchangeDay.GetValue(this); }
      set { PropertyMetadata.WeekExchangeDay.SetValue(this, value); }
    }

    /// <summary>Gets or sets the OptionalWeekExchangeDay. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="OptionalWeekExchangeDay", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="AccoRent_OptionalWeekExchangeDay")]
    public string OptionalWeekExchangeDay {
      get { return PropertyMetadata.OptionalWeekExchangeDay.GetValue(this); }
      set { PropertyMetadata.OptionalWeekExchangeDay.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Color. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Color", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="AccoRent_Color")]
    public string Color {
      get { return PropertyMetadata.Color.GetValue(this); }
      set { PropertyMetadata.Color.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentYear. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentYear", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_RentYear")]
    public int RentYear {
      get { return PropertyMetadata.RentYear.GetValue(this); }
      set { PropertyMetadata.RentYear.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsActive. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsActive", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoRent_IsActive")]
    public bool IsActive {
      get { return PropertyMetadata.IsActive.GetValue(this); }
      set { PropertyMetadata.IsActive.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoSeasons. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoSeasons", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoSeason> AccoSeasons {
      get { return PropertyMetadata.AccoSeasons.GetValue(this); }
    }

    /// <summary>Gets the Accoes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Accoes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Acco> Accoes {
      get { return PropertyMetadata.Accoes.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoRentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, int> AccoRentId = new IbEm.DataEntityProperty<AccoRent, int>("AccoRentId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, int> AccoId = new IbEm.DataEntityProperty<AccoRent, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, string> Description = new IbEm.DataEntityProperty<AccoRent, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsAvailablePerNight <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, bool> IsAvailablePerNight = new IbEm.DataEntityProperty<AccoRent, bool>("IsAvailablePerNight", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPerNight <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, decimal> RentPerNight = new IbEm.DataEntityProperty<AccoRent, decimal>("RentPerNight", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MinimalNights <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, int> MinimalNights = new IbEm.DataEntityProperty<AccoRent, int>("MinimalNights", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsAvailablePerWeekend <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, bool> IsAvailablePerWeekend = new IbEm.DataEntityProperty<AccoRent, bool>("IsAvailablePerWeekend", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPerWeekend <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, decimal> RentPerWeekend = new IbEm.DataEntityProperty<AccoRent, decimal>("RentPerWeekend", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPerMidweek <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, decimal> RentPerMidweek = new IbEm.DataEntityProperty<AccoRent, decimal>("RentPerMidweek", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsAvailablePerWeek <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, bool> IsAvailablePerWeek = new IbEm.DataEntityProperty<AccoRent, bool>("IsAvailablePerWeek", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPerWeek <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, decimal> RentPerWeek = new IbEm.DataEntityProperty<AccoRent, decimal>("RentPerWeek", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MinimalWeeks <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, int> MinimalWeeks = new IbEm.DataEntityProperty<AccoRent, int>("MinimalWeeks", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WeekExchangeDay <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, string> WeekExchangeDay = new IbEm.DataEntityProperty<AccoRent, string>("WeekExchangeDay", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The OptionalWeekExchangeDay <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, string> OptionalWeekExchangeDay = new IbEm.DataEntityProperty<AccoRent, string>("OptionalWeekExchangeDay", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Color <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, string> Color = new IbEm.DataEntityProperty<AccoRent, string>("Color", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentYear <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, int> RentYear = new IbEm.DataEntityProperty<AccoRent, int>("RentYear", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsActive <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoRent, bool> IsActive = new IbEm.DataEntityProperty<AccoRent, bool>("IsActive", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoSeasons <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoRent, AccoSeason> AccoSeasons = new IbEm.NavigationListEntityProperty<AccoRent, AccoSeason>("AccoSeasons", true, "FK_AccoSeason_AccoRent", IbEm.QueryDirection.ToRole1);

      /// <summary>The Accoes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<AccoRent, Acco> Accoes = new IbEm.NavigationListEntityProperty<AccoRent, Acco>("Accoes", true, "FK_Acco_AccoRent", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoRent, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoRent, Acco>("Acco", true, "FK_AccoRent_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoRentId = "AccoRentId";
      public const String AccoId = "AccoId";
      public const String Description = "Description";
      public const String IsAvailablePerNight = "IsAvailablePerNight";
      public const String RentPerNight = "RentPerNight";
      public const String MinimalNights = "MinimalNights";
      public const String IsAvailablePerWeekend = "IsAvailablePerWeekend";
      public const String RentPerWeekend = "RentPerWeekend";
      public const String RentPerMidweek = "RentPerMidweek";
      public const String IsAvailablePerWeek = "IsAvailablePerWeek";
      public const String RentPerWeek = "RentPerWeek";
      public const String MinimalWeeks = "MinimalWeeks";
      public const String WeekExchangeDay = "WeekExchangeDay";
      public const String OptionalWeekExchangeDay = "OptionalWeekExchangeDay";
      public const String Color = "Color";
      public const String RentYear = "RentYear";
      public const String IsActive = "IsActive";
      public const String AccoSeasons = "AccoSeasons";
      public const String Accoes = "Accoes";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoRent class

  #region AccoSeason class

  /// <summary>The auto-generated AccoSeason class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoSeasons")]
  public partial class AccoSeason : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoSeason, object>> expr) {
      return IbCore.PropertyPath.For<AccoSeason>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoSeasonId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoSeasonId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_AccoSeasonId")]
    public int AccoSeasonId {
      get { return PropertyMetadata.AccoSeasonId.GetValue(this); }
      set { PropertyMetadata.AccoSeasonId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoSeason_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SeasonYear. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SeasonYear", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_SeasonYear")]
    public int SeasonYear {
      get { return PropertyMetadata.SeasonYear.GetValue(this); }
      set { PropertyMetadata.SeasonYear.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SeasonStart. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SeasonStart", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_SeasonStart")]
    public System.DateTime SeasonStart {
      get { return PropertyMetadata.SeasonStart.GetValue(this); }
      set { PropertyMetadata.SeasonStart.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SeasonEnd. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SeasonEnd", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_SeasonEnd")]
    public System.DateTime SeasonEnd {
      get { return PropertyMetadata.SeasonEnd.GetValue(this); }
      set { PropertyMetadata.SeasonEnd.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoRentId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoRentId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSeason_AccoRentId")]
    public int AccoRentId {
      get { return PropertyMetadata.AccoRentId.GetValue(this); }
      set { PropertyMetadata.AccoRentId.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoRent. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoRent", AutoGenerateField=false)]
    public AccoRent AccoRent {
      get { return PropertyMetadata.AccoRent.GetValue(this); }
      set { PropertyMetadata.AccoRent.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoSeasonId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, int> AccoSeasonId = new IbEm.DataEntityProperty<AccoSeason, int>("AccoSeasonId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, int> AccoId = new IbEm.DataEntityProperty<AccoSeason, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, string> Description = new IbEm.DataEntityProperty<AccoSeason, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SeasonYear <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, int> SeasonYear = new IbEm.DataEntityProperty<AccoSeason, int>("SeasonYear", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SeasonStart <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, System.DateTime> SeasonStart = new IbEm.DataEntityProperty<AccoSeason, System.DateTime>("SeasonStart", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SeasonEnd <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, System.DateTime> SeasonEnd = new IbEm.DataEntityProperty<AccoSeason, System.DateTime>("SeasonEnd", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoRentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSeason, int> AccoRentId = new IbEm.DataEntityProperty<AccoSeason, int>("AccoRentId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoRent");

      /// <summary>The AccoRent <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoSeason, AccoRent> AccoRent = new IbEm.NavigationScalarEntityProperty<AccoSeason, AccoRent>("AccoRent", true, "FK_AccoSeason_AccoRent", IbEm.QueryDirection.ToRole2);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoSeason, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoSeason, Acco>("Acco", true, "FK_AccoSeason_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoSeasonId = "AccoSeasonId";
      public const String AccoId = "AccoId";
      public const String Description = "Description";
      public const String SeasonYear = "SeasonYear";
      public const String SeasonStart = "SeasonStart";
      public const String SeasonEnd = "SeasonEnd";
      public const String AccoRentId = "AccoRentId";
      public const String AccoRent = "AccoRent";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoSeason class

  #region AccoSpecialOffer class

  /// <summary>The auto-generated AccoSpecialOffer class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoSpecialOffers")]
  public partial class AccoSpecialOffer : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoSpecialOffer, object>> expr) {
      return IbCore.PropertyPath.For<AccoSpecialOffer>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoSpecialOfferId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoSpecialOfferId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSpecialOffer_AccoSpecialOfferId")]
    public int AccoSpecialOfferId {
      get { return PropertyMetadata.AccoSpecialOfferId.GetValue(this); }
      set { PropertyMetadata.AccoSpecialOfferId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSpecialOffer_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LanguageId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="LanguageId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSpecialOffer_LanguageId")]
    public int LanguageId {
      get { return PropertyMetadata.LanguageId.GetValue(this); }
      set { PropertyMetadata.LanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SpecialOfferStart. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SpecialOfferStart", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSpecialOffer_SpecialOfferStart")]
    public System.DateTime SpecialOfferStart {
      get { return PropertyMetadata.SpecialOfferStart.GetValue(this); }
      set { PropertyMetadata.SpecialOfferStart.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SpecialOfferEnd. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SpecialOfferEnd", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoSpecialOffer_SpecialOfferEnd")]
    public System.DateTime SpecialOfferEnd {
      get { return PropertyMetadata.SpecialOfferEnd.GetValue(this); }
      set { PropertyMetadata.SpecialOfferEnd.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoSpecialOffer_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Language. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Language", AutoGenerateField=false)]
    public Language Language {
      get { return PropertyMetadata.Language.GetValue(this); }
      set { PropertyMetadata.Language.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoSpecialOfferId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, int> AccoSpecialOfferId = new IbEm.DataEntityProperty<AccoSpecialOffer, int>("AccoSpecialOfferId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, int> AccoId = new IbEm.DataEntityProperty<AccoSpecialOffer, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The LanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, int> LanguageId = new IbEm.DataEntityProperty<AccoSpecialOffer, int>("LanguageId", false, false, IbEm.ConcurrencyStrategy.None, false, "Language");

      /// <summary>The SpecialOfferStart <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, System.DateTime> SpecialOfferStart = new IbEm.DataEntityProperty<AccoSpecialOffer, System.DateTime>("SpecialOfferStart", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SpecialOfferEnd <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, System.DateTime> SpecialOfferEnd = new IbEm.DataEntityProperty<AccoSpecialOffer, System.DateTime>("SpecialOfferEnd", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoSpecialOffer, string> Description = new IbEm.DataEntityProperty<AccoSpecialOffer, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Language <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoSpecialOffer, Language> Language = new IbEm.NavigationScalarEntityProperty<AccoSpecialOffer, Language>("Language", true, "FK_SpecialOffer_Language", IbEm.QueryDirection.ToRole2);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoSpecialOffer, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoSpecialOffer, Acco>("Acco", true, "FK_SpecialOffer_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoSpecialOfferId = "AccoSpecialOfferId";
      public const String AccoId = "AccoId";
      public const String LanguageId = "LanguageId";
      public const String SpecialOfferStart = "SpecialOfferStart";
      public const String SpecialOfferEnd = "SpecialOfferEnd";
      public const String Description = "Description";
      public const String Language = "Language";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoSpecialOffer class

  #region AccoTrustee class

  /// <summary>The auto-generated AccoTrustee class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoTrustees")]
  public partial class AccoTrustee : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoTrustee, object>> expr) {
      return IbCore.PropertyPath.For<AccoTrustee>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoTrusteeId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoTrusteeId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoTrustee_AccoTrusteeId")]
    public int AccoTrusteeId {
      get { return PropertyMetadata.AccoTrusteeId.GetValue(this); }
      set { PropertyMetadata.AccoTrusteeId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoOwnerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoOwnerId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoTrustee_AccoOwnerId")]
    public int AccoOwnerId {
      get { return PropertyMetadata.AccoOwnerId.GetValue(this); }
      set { PropertyMetadata.AccoOwnerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoTrustee_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Login. </summary>
    [DataMember]
    [IbVal.RequiredValueVerifier(ErrorMessageResourceName = "Acco_Login_Required", ErrorMessageResourceType = typeof(AccoResource))]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Login", AutoGenerateField=true)]
    public string Login {
      get { return PropertyMetadata.Login.GetValue(this); }
      set { PropertyMetadata.Login.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Password. </summary>
    [DataMember]
    [IbVal.RequiredValueVerifier(ErrorMessageResourceName = "Acco_Password_Required", ErrorMessageResourceType = typeof(AccoResource))]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Password", AutoGenerateField=true)]
    public string Password {
      get { return PropertyMetadata.Password.GetValue(this); }
      set { PropertyMetadata.Password.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoOwner. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoOwner", AutoGenerateField=false)]
    public AccoOwner AccoOwner {
      get { return PropertyMetadata.AccoOwner.GetValue(this); }
      set { PropertyMetadata.AccoOwner.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoTrusteeId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoTrustee, int> AccoTrusteeId = new IbEm.DataEntityProperty<AccoTrustee, int>("AccoTrusteeId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwnerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoTrustee, int> AccoOwnerId = new IbEm.DataEntityProperty<AccoTrustee, int>("AccoOwnerId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoOwner");

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoTrustee, string> Name = new IbEm.DataEntityProperty<AccoTrustee, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Login <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoTrustee, string> Login = new IbEm.DataEntityProperty<AccoTrustee, string>("Login", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Password <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoTrustee, string> Password = new IbEm.DataEntityProperty<AccoTrustee, string>("Password", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwner <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoTrustee, AccoOwner> AccoOwner = new IbEm.NavigationScalarEntityProperty<AccoTrustee, AccoOwner>("AccoOwner", true, "FK_Trustee_AccoOwner", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoTrusteeId = "AccoTrusteeId";
      public const String AccoOwnerId = "AccoOwnerId";
      public const String Name = "Name";
      public const String Login = "Login";
      public const String Password = "Password";
      public const String AccoOwner = "AccoOwner";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoTrustee class

  #region BookingAddition class

  /// <summary>The auto-generated BookingAddition class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.BookingAdditions")]
  public partial class BookingAddition : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BookingAddition, object>> expr) {
      return IbCore.PropertyPath.For<BookingAddition>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingAdditionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingAdditionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingAddition_BookingAdditionId")]
    public int BookingAdditionId {
      get { return PropertyMetadata.BookingAdditionId.GetValue(this); }
      set { PropertyMetadata.BookingAdditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingAddition_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingAddition_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoAdditionId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoAdditionId", AutoGenerateField=false)]
    public System.Nullable<int> AccoAdditionId {
      get { return PropertyMetadata.AccoAdditionId.GetValue(this); }
      set { PropertyMetadata.AccoAdditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Unit. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Unit", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="BookingAddition_Unit")]
    public string Unit {
      get { return PropertyMetadata.Unit.GetValue(this); }
      set { PropertyMetadata.Unit.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Price. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Price", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingAddition_Price")]
    public decimal Price {
      get { return PropertyMetadata.Price.GetValue(this); }
      set { PropertyMetadata.Price.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsPaidFromDeposit. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsPaidFromDeposit", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingAddition_IsPaidFromDeposit")]
    public bool IsPaidFromDeposit {
      get { return PropertyMetadata.IsPaidFromDeposit.GetValue(this); }
      set { PropertyMetadata.IsPaidFromDeposit.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoAddition. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAddition", AutoGenerateField=false)]
    public AccoAddition AccoAddition {
      get { return PropertyMetadata.AccoAddition.GetValue(this); }
      set { PropertyMetadata.AccoAddition.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingAdditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, int> BookingAdditionId = new IbEm.DataEntityProperty<BookingAddition, int>("BookingAdditionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, int> BookingId = new IbEm.DataEntityProperty<BookingAddition, int>("BookingId", false, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, int> DisplaySequence = new IbEm.DataEntityProperty<BookingAddition, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAdditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, System.Nullable<int>> AccoAdditionId = new IbEm.DataEntityProperty<BookingAddition, System.Nullable<int>>("AccoAdditionId", true, false, IbEm.ConcurrencyStrategy.None, false, "AccoAddition");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, string> Description = new IbEm.DataEntityProperty<BookingAddition, string>("Description", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Unit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, string> Unit = new IbEm.DataEntityProperty<BookingAddition, string>("Unit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Price <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, decimal> Price = new IbEm.DataEntityProperty<BookingAddition, decimal>("Price", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, string> CreatedUser = new IbEm.DataEntityProperty<BookingAddition, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<BookingAddition, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, string> ModifyUser = new IbEm.DataEntityProperty<BookingAddition, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<BookingAddition, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsPaidFromDeposit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingAddition, bool> IsPaidFromDeposit = new IbEm.DataEntityProperty<BookingAddition, bool>("IsPaidFromDeposit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAddition <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingAddition, AccoAddition> AccoAddition = new IbEm.NavigationScalarEntityProperty<BookingAddition, AccoAddition>("AccoAddition", true, "FK_BookingAddition_AccoAddition", IbEm.QueryDirection.ToRole2);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingAddition, Booking> Booking = new IbEm.NavigationScalarEntityProperty<BookingAddition, Booking>("Booking", true, "FK_BookingAddition_Booking", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingAdditionId = "BookingAdditionId";
      public const String BookingId = "BookingId";
      public const String DisplaySequence = "DisplaySequence";
      public const String AccoAdditionId = "AccoAdditionId";
      public const String Description = "Description";
      public const String Unit = "Unit";
      public const String Price = "Price";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String IsPaidFromDeposit = "IsPaidFromDeposit";
      public const String AccoAddition = "AccoAddition";
      public const String Booking = "Booking";
    }
    #endregion EntityPropertyNames
  }
  #endregion BookingAddition class

  #region BookingCancelCondition class

  /// <summary>The auto-generated BookingCancelCondition class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.BookingCancelConditions")]
  public partial class BookingCancelCondition : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BookingCancelCondition, object>> expr) {
      return IbCore.PropertyPath.For<BookingCancelCondition>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingCancelConditionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingCancelConditionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingCancelCondition_BookingCancelConditionId")]
    public int BookingCancelConditionId {
      get { return PropertyMetadata.BookingCancelConditionId.GetValue(this); }
      set { PropertyMetadata.BookingCancelConditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingCancelCondition_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoCancelConditionId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoCancelConditionId", AutoGenerateField=false)]
    public System.Nullable<int> AccoCancelConditionId {
      get { return PropertyMetadata.AccoCancelConditionId.GetValue(this); }
      set { PropertyMetadata.AccoCancelConditionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysBeforArrival. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysBeforArrival", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingCancelCondition_DaysBeforArrival")]
    public int DaysBeforArrival {
      get { return PropertyMetadata.DaysBeforArrival.GetValue(this); }
      set { PropertyMetadata.DaysBeforArrival.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentPercentageToPay. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentPercentageToPay", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingCancelCondition_RentPercentageToPay")]
    public int RentPercentageToPay {
      get { return PropertyMetadata.RentPercentageToPay.GetValue(this); }
      set { PropertyMetadata.RentPercentageToPay.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoCancelCondition. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoCancelCondition", AutoGenerateField=false)]
    public AccoCancelCondition AccoCancelCondition {
      get { return PropertyMetadata.AccoCancelCondition.GetValue(this); }
      set { PropertyMetadata.AccoCancelCondition.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingCancelConditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, int> BookingCancelConditionId = new IbEm.DataEntityProperty<BookingCancelCondition, int>("BookingCancelConditionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, int> BookingId = new IbEm.DataEntityProperty<BookingCancelCondition, int>("BookingId", false, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The AccoCancelConditionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<int>> AccoCancelConditionId = new IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<int>>("AccoCancelConditionId", true, false, IbEm.ConcurrencyStrategy.None, false, "AccoCancelCondition");

      /// <summary>The DaysBeforArrival <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, int> DaysBeforArrival = new IbEm.DataEntityProperty<BookingCancelCondition, int>("DaysBeforArrival", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentPercentageToPay <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, int> RentPercentageToPay = new IbEm.DataEntityProperty<BookingCancelCondition, int>("RentPercentageToPay", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, string> CreatedUser = new IbEm.DataEntityProperty<BookingCancelCondition, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, string> ModifyUser = new IbEm.DataEntityProperty<BookingCancelCondition, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<BookingCancelCondition, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoCancelCondition <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingCancelCondition, AccoCancelCondition> AccoCancelCondition = new IbEm.NavigationScalarEntityProperty<BookingCancelCondition, AccoCancelCondition>("AccoCancelCondition", true, "FK_BookingCancelCondition_AccoCancelCondition", IbEm.QueryDirection.ToRole2);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingCancelCondition, Booking> Booking = new IbEm.NavigationScalarEntityProperty<BookingCancelCondition, Booking>("Booking", true, "FK_BookingCancelCondition_Booking", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingCancelConditionId = "BookingCancelConditionId";
      public const String BookingId = "BookingId";
      public const String AccoCancelConditionId = "AccoCancelConditionId";
      public const String DaysBeforArrival = "DaysBeforArrival";
      public const String RentPercentageToPay = "RentPercentageToPay";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoCancelCondition = "AccoCancelCondition";
      public const String Booking = "Booking";
    }
    #endregion EntityPropertyNames
  }
  #endregion BookingCancelCondition class

  #region BookingGuest class

  /// <summary>The auto-generated BookingGuest class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.BookingGuests")]
  public partial class BookingGuest : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BookingGuest, object>> expr) {
      return IbCore.PropertyPath.For<BookingGuest>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingGuestId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingGuestId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingGuest_BookingGuestId")]
    public int BookingGuestId {
      get { return PropertyMetadata.BookingGuestId.GetValue(this); }
      set { PropertyMetadata.BookingGuestId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingGuest_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Email. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Email", AutoGenerateField=true)]
    public string Email {
      get { return PropertyMetadata.Email.GetValue(this); }
      set { PropertyMetadata.Email.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Phone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Phone", AutoGenerateField=true)]
    public string Phone {
      get { return PropertyMetadata.Phone.GetValue(this); }
      set { PropertyMetadata.Phone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address1. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address1", AutoGenerateField=true)]
    public string Address1 {
      get { return PropertyMetadata.Address1.GetValue(this); }
      set { PropertyMetadata.Address1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address2. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address2", AutoGenerateField=true)]
    public string Address2 {
      get { return PropertyMetadata.Address2.GetValue(this); }
      set { PropertyMetadata.Address2.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address3. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address3", AutoGenerateField=true)]
    public string Address3 {
      get { return PropertyMetadata.Address3.GetValue(this); }
      set { PropertyMetadata.Address3.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Gender. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Gender", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="BookingGuest_Gender")]
    public string Gender {
      get { return PropertyMetadata.Gender.GetValue(this); }
      set { PropertyMetadata.Gender.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BirthDate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BirthDate", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> BirthDate {
      get { return PropertyMetadata.BirthDate.GetValue(this); }
      set { PropertyMetadata.BirthDate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IdentityDocument. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IdentityDocument", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="BookingGuest_IdentityDocument")]
    public string IdentityDocument {
      get { return PropertyMetadata.IdentityDocument.GetValue(this); }
      set { PropertyMetadata.IdentityDocument.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingGuestId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, int> BookingGuestId = new IbEm.DataEntityProperty<BookingGuest, int>("BookingGuestId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, int> BookingId = new IbEm.DataEntityProperty<BookingGuest, int>("BookingId", false, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Name = new IbEm.DataEntityProperty<BookingGuest, string>("Name", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Email <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Email = new IbEm.DataEntityProperty<BookingGuest, string>("Email", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Phone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Phone = new IbEm.DataEntityProperty<BookingGuest, string>("Phone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Address1 = new IbEm.DataEntityProperty<BookingGuest, string>("Address1", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address2 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Address2 = new IbEm.DataEntityProperty<BookingGuest, string>("Address2", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address3 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Address3 = new IbEm.DataEntityProperty<BookingGuest, string>("Address3", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Gender <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> Gender = new IbEm.DataEntityProperty<BookingGuest, string>("Gender", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BirthDate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>> BirthDate = new IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>>("BirthDate", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IdentityDocument <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> IdentityDocument = new IbEm.DataEntityProperty<BookingGuest, string>("IdentityDocument", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> CreatedUser = new IbEm.DataEntityProperty<BookingGuest, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<BookingGuest, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, string> ModifyUser = new IbEm.DataEntityProperty<BookingGuest, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingGuest, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<BookingGuest, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingGuest, Booking> Booking = new IbEm.NavigationScalarEntityProperty<BookingGuest, Booking>("Booking", true, "FK_BookingGuest_Booking", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingGuestId = "BookingGuestId";
      public const String BookingId = "BookingId";
      public const String Name = "Name";
      public const String Email = "Email";
      public const String Phone = "Phone";
      public const String Address1 = "Address1";
      public const String Address2 = "Address2";
      public const String Address3 = "Address3";
      public const String Gender = "Gender";
      public const String BirthDate = "BirthDate";
      public const String IdentityDocument = "IdentityDocument";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String Booking = "Booking";
    }
    #endregion EntityPropertyNames
  }
  #endregion BookingGuest class

  #region BookingPayment class

  /// <summary>The auto-generated BookingPayment class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.BookingPayments")]
  public partial class BookingPayment : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BookingPayment, object>> expr) {
      return IbCore.PropertyPath.For<BookingPayment>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingPaymentId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingPaymentId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_BookingPaymentId")]
    public int BookingPaymentId {
      get { return PropertyMetadata.BookingPaymentId.GetValue(this); }
      set { PropertyMetadata.BookingPaymentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsPaymentByGuest. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsPaymentByGuest", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_IsPaymentByGuest")]
    public bool IsPaymentByGuest {
      get { return PropertyMetadata.IsPaymentByGuest.GetValue(this); }
      set { PropertyMetadata.IsPaymentByGuest.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsScheduledPayment. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsScheduledPayment", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_IsScheduledPayment")]
    public bool IsScheduledPayment {
      get { return PropertyMetadata.IsScheduledPayment.GetValue(this); }
      set { PropertyMetadata.IsScheduledPayment.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Due. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Due", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_Due")]
    public System.DateTime Due {
      get { return PropertyMetadata.Due.GetValue(this); }
      set { PropertyMetadata.Due.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Amount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Amount", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_Amount")]
    public decimal Amount {
      get { return PropertyMetadata.Amount.GetValue(this); }
      set { PropertyMetadata.Amount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsPaid. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsPaid", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingPayment_IsPaid")]
    public bool IsPaid {
      get { return PropertyMetadata.IsPaid.GetValue(this); }
      set { PropertyMetadata.IsPaid.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingPaymentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, int> BookingPaymentId = new IbEm.DataEntityProperty<BookingPayment, int>("BookingPaymentId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, int> BookingId = new IbEm.DataEntityProperty<BookingPayment, int>("BookingId", false, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The IsPaymentByGuest <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, bool> IsPaymentByGuest = new IbEm.DataEntityProperty<BookingPayment, bool>("IsPaymentByGuest", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsScheduledPayment <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, bool> IsScheduledPayment = new IbEm.DataEntityProperty<BookingPayment, bool>("IsScheduledPayment", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Due <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, System.DateTime> Due = new IbEm.DataEntityProperty<BookingPayment, System.DateTime>("Due", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Amount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, decimal> Amount = new IbEm.DataEntityProperty<BookingPayment, decimal>("Amount", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsPaid <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, bool> IsPaid = new IbEm.DataEntityProperty<BookingPayment, bool>("IsPaid", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, string> CreatedUser = new IbEm.DataEntityProperty<BookingPayment, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<BookingPayment, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, string> ModifyUser = new IbEm.DataEntityProperty<BookingPayment, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingPayment, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<BookingPayment, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingPayment, Booking> Booking = new IbEm.NavigationScalarEntityProperty<BookingPayment, Booking>("Booking", true, "FK_BookingPayment_Booking", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingPaymentId = "BookingPaymentId";
      public const String BookingId = "BookingId";
      public const String IsPaymentByGuest = "IsPaymentByGuest";
      public const String IsScheduledPayment = "IsScheduledPayment";
      public const String Due = "Due";
      public const String Amount = "Amount";
      public const String IsPaid = "IsPaid";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String Booking = "Booking";
    }
    #endregion EntityPropertyNames
  }
  #endregion BookingPayment class

  #region BookingReminder class

  /// <summary>The auto-generated BookingReminder class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.BookingReminders")]
  public partial class BookingReminder : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BookingReminder, object>> expr) {
      return IbCore.PropertyPath.For<BookingReminder>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingReminderId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingReminderId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_BookingReminderId")]
    public int BookingReminderId {
      get { return PropertyMetadata.BookingReminderId.GetValue(this); }
      set { PropertyMetadata.BookingReminderId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoReminderId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoReminderId", AutoGenerateField=false)]
    public System.Nullable<int> AccoReminderId {
      get { return PropertyMetadata.AccoReminderId.GetValue(this); }
      set { PropertyMetadata.AccoReminderId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="BookingReminder_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Milestone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Milestone", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="BookingReminder_Milestone")]
    public string Milestone {
      get { return PropertyMetadata.Milestone.GetValue(this); }
      set { PropertyMetadata.Milestone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Offset. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Offset", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_Offset")]
    public int Offset {
      get { return PropertyMetadata.Offset.GetValue(this); }
      set { PropertyMetadata.Offset.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsDue. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsDue", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_IsDue")]
    public bool IsDue {
      get { return PropertyMetadata.IsDue.GetValue(this); }
      set { PropertyMetadata.IsDue.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Due. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Due", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Due {
      get { return PropertyMetadata.Due.GetValue(this); }
      set { PropertyMetadata.Due.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsDone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsDone", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BookingReminder_IsDone")]
    public bool IsDone {
      get { return PropertyMetadata.IsDone.GetValue(this); }
      set { PropertyMetadata.IsDone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Done. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Done", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Done {
      get { return PropertyMetadata.Done.GetValue(this); }
      set { PropertyMetadata.Done.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoReminder. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoReminder", AutoGenerateField=false)]
    public AccoReminder AccoReminder {
      get { return PropertyMetadata.AccoReminder.GetValue(this); }
      set { PropertyMetadata.AccoReminder.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booking. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Booking", AutoGenerateField=false)]
    public Booking Booking {
      get { return PropertyMetadata.Booking.GetValue(this); }
      set { PropertyMetadata.Booking.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingReminderId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, int> BookingReminderId = new IbEm.DataEntityProperty<BookingReminder, int>("BookingReminderId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, int> BookingId = new IbEm.DataEntityProperty<BookingReminder, int>("BookingId", false, false, IbEm.ConcurrencyStrategy.None, false, "Booking");

      /// <summary>The AccoReminderId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<int>> AccoReminderId = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<int>>("AccoReminderId", true, false, IbEm.ConcurrencyStrategy.None, false, "AccoReminder");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, string> Description = new IbEm.DataEntityProperty<BookingReminder, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Milestone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, string> Milestone = new IbEm.DataEntityProperty<BookingReminder, string>("Milestone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Offset <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, int> Offset = new IbEm.DataEntityProperty<BookingReminder, int>("Offset", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, int> DisplaySequence = new IbEm.DataEntityProperty<BookingReminder, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsDue <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, bool> IsDue = new IbEm.DataEntityProperty<BookingReminder, bool>("IsDue", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Due <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>> Due = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>>("Due", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsDone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, bool> IsDone = new IbEm.DataEntityProperty<BookingReminder, bool>("IsDone", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Done <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>> Done = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>>("Done", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, string> CreatedUser = new IbEm.DataEntityProperty<BookingReminder, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, string> ModifyUser = new IbEm.DataEntityProperty<BookingReminder, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BookingReminder, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<BookingReminder, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoReminder <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingReminder, AccoReminder> AccoReminder = new IbEm.NavigationScalarEntityProperty<BookingReminder, AccoReminder>("AccoReminder", true, "FK_BookingReminder_AccoReminder", IbEm.QueryDirection.ToRole2);

      /// <summary>The Booking <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<BookingReminder, Booking> Booking = new IbEm.NavigationScalarEntityProperty<BookingReminder, Booking>("Booking", true, "FK_BookingReminder_Booking", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingReminderId = "BookingReminderId";
      public const String BookingId = "BookingId";
      public const String AccoReminderId = "AccoReminderId";
      public const String Description = "Description";
      public const String Milestone = "Milestone";
      public const String Offset = "Offset";
      public const String DisplaySequence = "DisplaySequence";
      public const String IsDue = "IsDue";
      public const String Due = "Due";
      public const String IsDone = "IsDone";
      public const String Done = "Done";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoReminder = "AccoReminder";
      public const String Booking = "Booking";
    }
    #endregion EntityPropertyNames
  }
  #endregion BookingReminder class

  #region Country class

  /// <summary>The auto-generated Country class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Countries")]
  public partial class Country : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Country, object>> expr) {
      return IbCore.PropertyPath.For<Country>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the CountryId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CountryId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Country_CountryId")]
    public int CountryId {
      get { return PropertyMetadata.CountryId.GetValue(this); }
      set { PropertyMetadata.CountryId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    public System.Nullable<int> DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Country_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoOwners. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoOwners", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoOwner> AccoOwners {
      get { return PropertyMetadata.AccoOwners.GetValue(this); }
    }

    /// <summary>Gets the Bookings. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Bookings", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Booking> Bookings {
      get { return PropertyMetadata.Bookings.GetValue(this); }
    }

    /// <summary>Gets the Accoes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Accoes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Acco> Accoes {
      get { return PropertyMetadata.Accoes.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The CountryId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, int> CountryId = new IbEm.DataEntityProperty<Country, int>("CountryId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, System.Nullable<int>> DisplaySequence = new IbEm.DataEntityProperty<Country, System.Nullable<int>>("DisplaySequence", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, string> Description = new IbEm.DataEntityProperty<Country, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, string> CreatedUser = new IbEm.DataEntityProperty<Country, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<Country, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, string> ModifyUser = new IbEm.DataEntityProperty<Country, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Country, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<Country, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwners <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Country, AccoOwner> AccoOwners = new IbEm.NavigationListEntityProperty<Country, AccoOwner>("AccoOwners", true, "FK_AccoOwner_AccoCountry", IbEm.QueryDirection.ToRole1);

      /// <summary>The Bookings <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Country, Booking> Bookings = new IbEm.NavigationListEntityProperty<Country, Booking>("Bookings", true, "FK_Booking_Country", IbEm.QueryDirection.ToRole1);

      /// <summary>The Accoes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Country, Acco> Accoes = new IbEm.NavigationListEntityProperty<Country, Acco>("Accoes", true, "FK_Acco_Country", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String CountryId = "CountryId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Description = "Description";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoOwners = "AccoOwners";
      public const String Bookings = "Bookings";
      public const String Accoes = "Accoes";
    }
    #endregion EntityPropertyNames
  }
  #endregion Country class

  #region Language class

  /// <summary>The auto-generated Language class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Languages")]
  public partial class Language : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Language, object>> expr) {
      return IbCore.PropertyPath.For<Language>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the LanguageId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LanguageId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Language_LanguageId")]
    public int LanguageId {
      get { return PropertyMetadata.LanguageId.GetValue(this); }
      set { PropertyMetadata.LanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Language_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Language_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsBaseLanguage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsBaseLanguage", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Language_IsBaseLanguage")]
    public bool IsBaseLanguage {
      get { return PropertyMetadata.IsBaseLanguage.GetValue(this); }
      set { PropertyMetadata.IsBaseLanguage.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ShortCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ShortCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Language_ShortCode")]
    public string ShortCode {
      get { return PropertyMetadata.ShortCode.GetValue(this); }
      set { PropertyMetadata.ShortCode.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoAdditionDescriptions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAdditionDescriptions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoAdditionDescription> AccoAdditionDescriptions {
      get { return PropertyMetadata.AccoAdditionDescriptions.GetValue(this); }
    }

    /// <summary>Gets the AccoOwners. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoOwners", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoOwner> AccoOwners {
      get { return PropertyMetadata.AccoOwners.GetValue(this); }
    }

    /// <summary>Gets the AccoSpecialOffers. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoSpecialOffers", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoSpecialOffer> AccoSpecialOffers {
      get { return PropertyMetadata.AccoSpecialOffers.GetValue(this); }
    }

    /// <summary>Gets the AccoDescriptions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoDescriptions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoDescription> AccoDescriptions {
      get { return PropertyMetadata.AccoDescriptions.GetValue(this); }
    }

    /// <summary>Gets the Bookings. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Bookings", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Booking> Bookings {
      get { return PropertyMetadata.Bookings.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The LanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, int> LanguageId = new IbEm.DataEntityProperty<Language, int>("LanguageId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, string> Description = new IbEm.DataEntityProperty<Language, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, int> DisplaySequence = new IbEm.DataEntityProperty<Language, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsBaseLanguage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, bool> IsBaseLanguage = new IbEm.DataEntityProperty<Language, bool>("IsBaseLanguage", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, string> CreatedUser = new IbEm.DataEntityProperty<Language, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<Language, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, string> ModifyUser = new IbEm.DataEntityProperty<Language, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<Language, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ShortCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Language, string> ShortCode = new IbEm.DataEntityProperty<Language, string>("ShortCode", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoAdditionDescriptions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Language, AccoAdditionDescription> AccoAdditionDescriptions = new IbEm.NavigationListEntityProperty<Language, AccoAdditionDescription>("AccoAdditionDescriptions", true, "FK_AccoAdditionDescription_Language", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoOwners <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Language, AccoOwner> AccoOwners = new IbEm.NavigationListEntityProperty<Language, AccoOwner>("AccoOwners", true, "FK_AccoOwner_AccoLanguage", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoSpecialOffers <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Language, AccoSpecialOffer> AccoSpecialOffers = new IbEm.NavigationListEntityProperty<Language, AccoSpecialOffer>("AccoSpecialOffers", true, "FK_SpecialOffer_Language", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoDescriptions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Language, AccoDescription> AccoDescriptions = new IbEm.NavigationListEntityProperty<Language, AccoDescription>("AccoDescriptions", true, "FK_AccoDescription_Language", IbEm.QueryDirection.ToRole1);

      /// <summary>The Bookings <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Language, Booking> Bookings = new IbEm.NavigationListEntityProperty<Language, Booking>("Bookings", true, "FK_Booking_Language", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String LanguageId = "LanguageId";
      public const String Description = "Description";
      public const String DisplaySequence = "DisplaySequence";
      public const String IsBaseLanguage = "IsBaseLanguage";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String ShortCode = "ShortCode";
      public const String AccoAdditionDescriptions = "AccoAdditionDescriptions";
      public const String AccoOwners = "AccoOwners";
      public const String AccoSpecialOffers = "AccoSpecialOffers";
      public const String AccoDescriptions = "AccoDescriptions";
      public const String Bookings = "Bookings";
    }
    #endregion EntityPropertyNames
  }
  #endregion Language class

  #region MailTemplate class

  /// <summary>The auto-generated MailTemplate class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.MailTemplates")]
  public partial class MailTemplate : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<MailTemplate, object>> expr) {
      return IbCore.PropertyPath.For<MailTemplate>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the MailTemplateId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MailTemplateId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="MailTemplate_MailTemplateId")]
    public int MailTemplateId {
      get { return PropertyMetadata.MailTemplateId.GetValue(this); }
      set { PropertyMetadata.MailTemplateId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="MailTemplate_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="MailTemplate_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MailContext. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MailContext", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="MailTemplate_MailContext")]
    public string MailContext {
      get { return PropertyMetadata.MailContext.GetValue(this); }
      set { PropertyMetadata.MailContext.SetValue(this, value); }
    }

    /// <summary>Gets or sets the TemplateType. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="TemplateType", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="MailTemplate_TemplateType")]
    public string TemplateType {
      get { return PropertyMetadata.TemplateType.GetValue(this); }
      set { PropertyMetadata.TemplateType.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The MailTemplateId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, int> MailTemplateId = new IbEm.DataEntityProperty<MailTemplate, int>("MailTemplateId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, int> DisplaySequence = new IbEm.DataEntityProperty<MailTemplate, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, string> Description = new IbEm.DataEntityProperty<MailTemplate, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MailContext <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, string> MailContext = new IbEm.DataEntityProperty<MailTemplate, string>("MailContext", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The TemplateType <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, string> TemplateType = new IbEm.DataEntityProperty<MailTemplate, string>("TemplateType", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, string> CreatedUser = new IbEm.DataEntityProperty<MailTemplate, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<MailTemplate, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, string> ModifyUser = new IbEm.DataEntityProperty<MailTemplate, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MailTemplate, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<MailTemplate, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String MailTemplateId = "MailTemplateId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Description = "Description";
      public const String MailContext = "MailContext";
      public const String TemplateType = "TemplateType";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
    }
    #endregion EntityPropertyNames
  }
  #endregion MailTemplate class

  #region Sequence class

  /// <summary>The auto-generated Sequence class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Sequences")]
  public partial class Sequence : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Sequence, object>> expr) {
      return IbCore.PropertyPath.For<Sequence>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Name. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Sequence_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrentId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrentId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Sequence_CurrentId")]
    public int CurrentId {
      get { return PropertyMetadata.CurrentId.GetValue(this); }
      set { PropertyMetadata.CurrentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, string> Name = new IbEm.DataEntityProperty<Sequence, string>("Name", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CurrentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, int> CurrentId = new IbEm.DataEntityProperty<Sequence, int>("CurrentId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, string> CreatedUser = new IbEm.DataEntityProperty<Sequence, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<Sequence, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, string> ModifyUser = new IbEm.DataEntityProperty<Sequence, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Sequence, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<Sequence, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String Name = "Name";
      public const String CurrentId = "CurrentId";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
    }
    #endregion EntityPropertyNames
  }
  #endregion Sequence class

  #region sysdiagram class

  /// <summary>The auto-generated sysdiagram class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.sysdiagrams")]
  public partial class sysdiagram : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<sysdiagram, object>> expr) {
      return IbCore.PropertyPath.For<sysdiagram>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=128, IsRequired=true, ErrorMessageResourceName="sysdiagram_name")]
    public string name {
      get { return PropertyMetadata.name.GetValue(this); }
      set { PropertyMetadata.name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the principal_id. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="principal_id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="sysdiagram_principal_id")]
    public int principal_id {
      get { return PropertyMetadata.principal_id.GetValue(this); }
      set { PropertyMetadata.principal_id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the diagram_id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="diagram_id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="sysdiagram_diagram_id")]
    public int diagram_id {
      get { return PropertyMetadata.diagram_id.GetValue(this); }
      set { PropertyMetadata.diagram_id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the version. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="version", AutoGenerateField=true)]
    public System.Nullable<int> version {
      get { return PropertyMetadata.version.GetValue(this); }
      set { PropertyMetadata.version.SetValue(this, value); }
    }

    /// <summary>Gets or sets the definition. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="definition", AutoGenerateField=true)]
    public byte[] definition {
      get { return PropertyMetadata.definition.GetValue(this); }
      set { PropertyMetadata.definition.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<sysdiagram, string> name = new IbEm.DataEntityProperty<sysdiagram, string>("name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The principal_id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<sysdiagram, int> principal_id = new IbEm.DataEntityProperty<sysdiagram, int>("principal_id", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The diagram_id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<sysdiagram, int> diagram_id = new IbEm.DataEntityProperty<sysdiagram, int>("diagram_id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The version <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<sysdiagram, System.Nullable<int>> version = new IbEm.DataEntityProperty<sysdiagram, System.Nullable<int>>("version", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The definition <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<sysdiagram, byte[]> definition = new IbEm.DataEntityProperty<sysdiagram, byte[]>("definition", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String name = "name";
      public const String principal_id = "principal_id";
      public const String diagram_id = "diagram_id";
      public const String version = "version";
      public const String definition = "definition";
    }
    #endregion EntityPropertyNames
  }
  #endregion sysdiagram class

  #region SystemCode class

  /// <summary>The auto-generated SystemCode class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.SystemCodes")]
  public partial class SystemCode : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<SystemCode, object>> expr) {
      return IbCore.PropertyPath.For<SystemCode>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the CodeId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CodeId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemCode_CodeId")]
    public int CodeId {
      get { return PropertyMetadata.CodeId.GetValue(this); }
      set { PropertyMetadata.CodeId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GroupId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="GroupId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemCode_GroupId")]
    public int GroupId {
      get { return PropertyMetadata.GroupId.GetValue(this); }
      set { PropertyMetadata.GroupId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    public System.Nullable<int> DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Code. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Code", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemCode_Code")]
    public string Code {
      get { return PropertyMetadata.Code.GetValue(this); }
      set { PropertyMetadata.Code.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemCode_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsDefault. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsDefault", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemCode_IsDefault")]
    public bool IsDefault {
      get { return PropertyMetadata.IsDefault.GetValue(this); }
      set { PropertyMetadata.IsDefault.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the SystemGroup. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="SystemGroup", AutoGenerateField=false)]
    public SystemGroup SystemGroup {
      get { return PropertyMetadata.SystemGroup.GetValue(this); }
      set { PropertyMetadata.SystemGroup.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The CodeId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, int> CodeId = new IbEm.DataEntityProperty<SystemCode, int>("CodeId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GroupId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, int> GroupId = new IbEm.DataEntityProperty<SystemCode, int>("GroupId", false, false, IbEm.ConcurrencyStrategy.None, false, "SystemGroup");

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, System.Nullable<int>> DisplaySequence = new IbEm.DataEntityProperty<SystemCode, System.Nullable<int>>("DisplaySequence", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Code <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, string> Code = new IbEm.DataEntityProperty<SystemCode, string>("Code", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, string> Description = new IbEm.DataEntityProperty<SystemCode, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsDefault <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, bool> IsDefault = new IbEm.DataEntityProperty<SystemCode, bool>("IsDefault", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, string> CreatedUser = new IbEm.DataEntityProperty<SystemCode, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<SystemCode, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, string> ModifyUser = new IbEm.DataEntityProperty<SystemCode, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemCode, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<SystemCode, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SystemGroup <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<SystemCode, SystemGroup> SystemGroup = new IbEm.NavigationScalarEntityProperty<SystemCode, SystemGroup>("SystemGroup", true, "FK_SystemCode_SystemGroup", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String CodeId = "CodeId";
      public const String GroupId = "GroupId";
      public const String DisplaySequence = "DisplaySequence";
      public const String Code = "Code";
      public const String Description = "Description";
      public const String IsDefault = "IsDefault";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String SystemGroup = "SystemGroup";
    }
    #endregion EntityPropertyNames
  }
  #endregion SystemCode class

  #region SystemGroup class

  /// <summary>The auto-generated SystemGroup class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.SystemGroups")]
  public partial class SystemGroup : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<SystemGroup, object>> expr) {
      return IbCore.PropertyPath.For<SystemGroup>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the GroupId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GroupId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemGroup_GroupId")]
    public int GroupId {
      get { return PropertyMetadata.GroupId.GetValue(this); }
      set { PropertyMetadata.GroupId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="SystemGroup_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="SystemGroup_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the SystemCodes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="SystemCodes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<SystemCode> SystemCodes {
      get { return PropertyMetadata.SystemCodes.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The GroupId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, int> GroupId = new IbEm.DataEntityProperty<SystemGroup, int>("GroupId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, string> Name = new IbEm.DataEntityProperty<SystemGroup, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, string> Description = new IbEm.DataEntityProperty<SystemGroup, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, string> CreatedUser = new IbEm.DataEntityProperty<SystemGroup, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<SystemGroup, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, string> ModifyUser = new IbEm.DataEntityProperty<SystemGroup, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<SystemGroup, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<SystemGroup, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SystemCodes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<SystemGroup, SystemCode> SystemCodes = new IbEm.NavigationListEntityProperty<SystemGroup, SystemCode>("SystemCodes", true, "FK_SystemCode_SystemGroup", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String GroupId = "GroupId";
      public const String Name = "Name";
      public const String Description = "Description";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String SystemCodes = "SystemCodes";
    }
    #endregion EntityPropertyNames
  }
  #endregion SystemGroup class

  #region Currency class

  /// <summary>The auto-generated Currency class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Currencies")]
  public partial class Currency : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Currency, object>> expr) {
      return IbCore.PropertyPath.For<Currency>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the CurrencyId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrencyId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Currency_CurrencyId")]
    public int CurrencyId {
      get { return PropertyMetadata.CurrencyId.GetValue(this); }
      set { PropertyMetadata.CurrencyId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Currency_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrencyCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrencyCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Currency_CurrencyCode")]
    public string CurrencyCode {
      get { return PropertyMetadata.CurrencyCode.GetValue(this); }
      set { PropertyMetadata.CurrencyCode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Currency_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrencySign. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrencySign", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Currency_CurrencySign")]
    public string CurrencySign {
      get { return PropertyMetadata.CurrencySign.GetValue(this); }
      set { PropertyMetadata.CurrencySign.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The CurrencyId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Currency, int> CurrencyId = new IbEm.DataEntityProperty<Currency, int>("CurrencyId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Currency, int> DisplaySequence = new IbEm.DataEntityProperty<Currency, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CurrencyCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Currency, string> CurrencyCode = new IbEm.DataEntityProperty<Currency, string>("CurrencyCode", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Currency, string> Description = new IbEm.DataEntityProperty<Currency, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CurrencySign <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Currency, string> CurrencySign = new IbEm.DataEntityProperty<Currency, string>("CurrencySign", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String CurrencyId = "CurrencyId";
      public const String DisplaySequence = "DisplaySequence";
      public const String CurrencyCode = "CurrencyCode";
      public const String Description = "Description";
      public const String CurrencySign = "CurrencySign";
    }
    #endregion EntityPropertyNames
  }
  #endregion Currency class

  #region AccoDescription class

  /// <summary>The auto-generated AccoDescription class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoDescriptions")]
  public partial class AccoDescription : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoDescription, object>> expr) {
      return IbCore.PropertyPath.For<AccoDescription>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoDescriptionId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoDescriptionId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoDescription_AccoDescriptionId")]
    public int AccoDescriptionId {
      get { return PropertyMetadata.AccoDescriptionId.GetValue(this); }
      set { PropertyMetadata.AccoDescriptionId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoDescription_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LanguageId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="LanguageId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoDescription_LanguageId")]
    public int LanguageId {
      get { return PropertyMetadata.LanguageId.GetValue(this); }
      set { PropertyMetadata.LanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoDescription_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PropertyName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PropertyName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="AccoDescription_PropertyName")]
    public string PropertyName {
      get { return PropertyMetadata.PropertyName.GetValue(this); }
      set { PropertyMetadata.PropertyName.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Language. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Language", AutoGenerateField=false)]
    public Language Language {
      get { return PropertyMetadata.Language.GetValue(this); }
      set { PropertyMetadata.Language.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoDescriptionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoDescription, int> AccoDescriptionId = new IbEm.DataEntityProperty<AccoDescription, int>("AccoDescriptionId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoDescription, int> AccoId = new IbEm.DataEntityProperty<AccoDescription, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The LanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoDescription, int> LanguageId = new IbEm.DataEntityProperty<AccoDescription, int>("LanguageId", false, false, IbEm.ConcurrencyStrategy.None, false, "Language");

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoDescription, string> Description = new IbEm.DataEntityProperty<AccoDescription, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PropertyName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoDescription, string> PropertyName = new IbEm.DataEntityProperty<AccoDescription, string>("PropertyName", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Language <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoDescription, Language> Language = new IbEm.NavigationScalarEntityProperty<AccoDescription, Language>("Language", true, "FK_AccoDescription_Language", IbEm.QueryDirection.ToRole2);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoDescription, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoDescription, Acco>("Acco", true, "FK_AccoDescription_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoDescriptionId = "AccoDescriptionId";
      public const String AccoId = "AccoId";
      public const String LanguageId = "LanguageId";
      public const String Description = "Description";
      public const String PropertyName = "PropertyName";
      public const String Language = "Language";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoDescription class

  #region Booking class

  /// <summary>The auto-generated Booking class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Bookings")]
  public partial class Booking : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Booking, object>> expr) {
      return IbCore.PropertyPath.For<Booking>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the BookingId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_BookingId")]
    public int BookingId {
      get { return PropertyMetadata.BookingId.GetValue(this); }
      set { PropertyMetadata.BookingId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booked. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Booked", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Booked")]
    public System.DateTime Booked {
      get { return PropertyMetadata.Booked.GetValue(this); }
      set { PropertyMetadata.Booked.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsBookedOnline. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsBookedOnline", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_IsBookedOnline")]
    public bool IsBookedOnline {
      get { return PropertyMetadata.IsBookedOnline.GetValue(this); }
      set { PropertyMetadata.IsBookedOnline.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Confirmed. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Confirmed", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Confirmed {
      get { return PropertyMetadata.Confirmed.GetValue(this); }
      set { PropertyMetadata.Confirmed.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Arrival. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Arrival", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Arrival")]
    public System.DateTime Arrival {
      get { return PropertyMetadata.Arrival.GetValue(this); }
      set { PropertyMetadata.Arrival.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Departure. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Departure", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Departure")]
    public System.DateTime Departure {
      get { return PropertyMetadata.Departure.GetValue(this); }
      set { PropertyMetadata.Departure.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Adults. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Adults", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Adults")]
    public int Adults {
      get { return PropertyMetadata.Adults.GetValue(this); }
      set { PropertyMetadata.Adults.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Children. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Children", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Children")]
    public int Children {
      get { return PropertyMetadata.Children.GetValue(this); }
      set { PropertyMetadata.Children.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Pets. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Pets", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Pets")]
    public int Pets {
      get { return PropertyMetadata.Pets.GetValue(this); }
      set { PropertyMetadata.Pets.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Additions. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Additions", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Additions")]
    public decimal Additions {
      get { return PropertyMetadata.Additions.GetValue(this); }
      set { PropertyMetadata.Additions.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Usage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Usage", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Usage")]
    public decimal Usage {
      get { return PropertyMetadata.Usage.GetValue(this); }
      set { PropertyMetadata.Usage.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Rent. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Rent", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Rent")]
    public decimal Rent {
      get { return PropertyMetadata.Rent.GetValue(this); }
      set { PropertyMetadata.Rent.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Deposit. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Deposit", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Deposit")]
    public decimal Deposit {
      get { return PropertyMetadata.Deposit.GetValue(this); }
      set { PropertyMetadata.Deposit.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysToPayDepositBackAfterDeparture. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysToPayDepositBackAfterDeparture", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_DaysToPayDepositBackAfterDeparture")]
    public int DaysToPayDepositBackAfterDeparture {
      get { return PropertyMetadata.DaysToPayDepositBackAfterDeparture.GetValue(this); }
      set { PropertyMetadata.DaysToPayDepositBackAfterDeparture.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CancelAdministrationCosts. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CancelAdministrationCosts", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_CancelAdministrationCosts")]
    public decimal CancelAdministrationCosts {
      get { return PropertyMetadata.CancelAdministrationCosts.GetValue(this); }
      set { PropertyMetadata.CancelAdministrationCosts.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Notes. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Notes", AutoGenerateField=true)]
    public string Notes {
      get { return PropertyMetadata.Notes.GetValue(this); }
      set { PropertyMetadata.Notes.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Status. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Status", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Booking_Status")]
    public string Status {
      get { return PropertyMetadata.Status.GetValue(this); }
      set { PropertyMetadata.Status.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StatusUpdate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StatusUpdate", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_StatusUpdate")]
    public System.DateTime StatusUpdate {
      get { return PropertyMetadata.StatusUpdate.GetValue(this); }
      set { PropertyMetadata.StatusUpdate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsConfirmed. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsConfirmed", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_IsConfirmed")]
    public bool IsConfirmed {
      get { return PropertyMetadata.IsConfirmed.GetValue(this); }
      set { PropertyMetadata.IsConfirmed.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsAmountExactlyScheduled. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsAmountExactlyScheduled", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_IsAmountExactlyScheduled")]
    public bool IsAmountExactlyScheduled {
      get { return PropertyMetadata.IsAmountExactlyScheduled.GetValue(this); }
      set { PropertyMetadata.IsAmountExactlyScheduled.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ArrivalGas. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ArrivalGas", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_ArrivalGas")]
    public decimal ArrivalGas {
      get { return PropertyMetadata.ArrivalGas.GetValue(this); }
      set { PropertyMetadata.ArrivalGas.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ArrivalWater. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ArrivalWater", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_ArrivalWater")]
    public decimal ArrivalWater {
      get { return PropertyMetadata.ArrivalWater.GetValue(this); }
      set { PropertyMetadata.ArrivalWater.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ArrivalElectricity. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ArrivalElectricity", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_ArrivalElectricity")]
    public decimal ArrivalElectricity {
      get { return PropertyMetadata.ArrivalElectricity.GetValue(this); }
      set { PropertyMetadata.ArrivalElectricity.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DepartureGas. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DepartureGas", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_DepartureGas")]
    public decimal DepartureGas {
      get { return PropertyMetadata.DepartureGas.GetValue(this); }
      set { PropertyMetadata.DepartureGas.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DepartureWater. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DepartureWater", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_DepartureWater")]
    public decimal DepartureWater {
      get { return PropertyMetadata.DepartureWater.GetValue(this); }
      set { PropertyMetadata.DepartureWater.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DepartureElectricity. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DepartureElectricity", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_DepartureElectricity")]
    public decimal DepartureElectricity {
      get { return PropertyMetadata.DepartureElectricity.GetValue(this); }
      set { PropertyMetadata.DepartureElectricity.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsBlock. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsBlock", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_IsBlock")]
    public bool IsBlock {
      get { return PropertyMetadata.IsBlock.GetValue(this); }
      set { PropertyMetadata.IsBlock.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookingColor. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookingColor", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Booking_BookingColor")]
    public string BookingColor {
      get { return PropertyMetadata.BookingColor.GetValue(this); }
      set { PropertyMetadata.BookingColor.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Booker. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Booker", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_Booker")]
    public string Booker {
      get { return PropertyMetadata.Booker.GetValue(this); }
      set { PropertyMetadata.Booker.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerLanguageId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookerLanguageId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_BookerLanguageId")]
    public int BookerLanguageId {
      get { return PropertyMetadata.BookerLanguageId.GetValue(this); }
      set { PropertyMetadata.BookerLanguageId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerEmail. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerEmail", AutoGenerateField=true)]
    public string BookerEmail {
      get { return PropertyMetadata.BookerEmail.GetValue(this); }
      set { PropertyMetadata.BookerEmail.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerPhone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerPhone", AutoGenerateField=true)]
    public string BookerPhone {
      get { return PropertyMetadata.BookerPhone.GetValue(this); }
      set { PropertyMetadata.BookerPhone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerMobile. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerMobile", AutoGenerateField=true)]
    public string BookerMobile {
      get { return PropertyMetadata.BookerMobile.GetValue(this); }
      set { PropertyMetadata.BookerMobile.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerAddress1. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerAddress1", AutoGenerateField=true)]
    public string BookerAddress1 {
      get { return PropertyMetadata.BookerAddress1.GetValue(this); }
      set { PropertyMetadata.BookerAddress1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerAddress2. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerAddress2", AutoGenerateField=true)]
    public string BookerAddress2 {
      get { return PropertyMetadata.BookerAddress2.GetValue(this); }
      set { PropertyMetadata.BookerAddress2.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerAddress3. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerAddress3", AutoGenerateField=true)]
    public string BookerAddress3 {
      get { return PropertyMetadata.BookerAddress3.GetValue(this); }
      set { PropertyMetadata.BookerAddress3.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerCountryId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BookerCountryId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Booking_BookerCountryId")]
    public int BookerCountryId {
      get { return PropertyMetadata.BookerCountryId.GetValue(this); }
      set { PropertyMetadata.BookerCountryId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerBank. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerBank", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Booking_BookerBank")]
    public string BookerBank {
      get { return PropertyMetadata.BookerBank.GetValue(this); }
      set { PropertyMetadata.BookerBank.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerBankAccount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerBankAccount", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Booking_BookerBankAccount")]
    public string BookerBankAccount {
      get { return PropertyMetadata.BookerBankAccount.GetValue(this); }
      set { PropertyMetadata.BookerBankAccount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the HomeContact. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="HomeContact", AutoGenerateField=true)]
    public string HomeContact {
      get { return PropertyMetadata.HomeContact.GetValue(this); }
      set { PropertyMetadata.HomeContact.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RegistrationNumber. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RegistrationNumber", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Booking_RegistrationNumber")]
    public string RegistrationNumber {
      get { return PropertyMetadata.RegistrationNumber.GetValue(this); }
      set { PropertyMetadata.RegistrationNumber.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerLatitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerLatitude", AutoGenerateField=true)]
    public System.Nullable<decimal> BookerLatitude {
      get { return PropertyMetadata.BookerLatitude.GetValue(this); }
      set { PropertyMetadata.BookerLatitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BookerLongitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BookerLongitude", AutoGenerateField=true)]
    public System.Nullable<decimal> BookerLongitude {
      get { return PropertyMetadata.BookerLongitude.GetValue(this); }
      set { PropertyMetadata.BookerLongitude.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the AccoNotifications. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoNotifications", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoNotification> AccoNotifications {
      get { return PropertyMetadata.AccoNotifications.GetValue(this); }
    }

    /// <summary>Gets or sets the Country. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Country", AutoGenerateField=false)]
    public Country Country {
      get { return PropertyMetadata.Country.GetValue(this); }
      set { PropertyMetadata.Country.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Language. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Language", AutoGenerateField=false)]
    public Language Language {
      get { return PropertyMetadata.Language.GetValue(this); }
      set { PropertyMetadata.Language.SetValue(this, value); }
    }

    /// <summary>Gets the BookingAdditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingAdditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingAddition> BookingAdditions {
      get { return PropertyMetadata.BookingAdditions.GetValue(this); }
    }

    /// <summary>Gets the BookingCancelConditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingCancelConditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingCancelCondition> BookingCancelConditions {
      get { return PropertyMetadata.BookingCancelConditions.GetValue(this); }
    }

    /// <summary>Gets the BookingGuests. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingGuests", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingGuest> BookingGuests {
      get { return PropertyMetadata.BookingGuests.GetValue(this); }
    }

    /// <summary>Gets the BookingPayments. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingPayments", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingPayment> BookingPayments {
      get { return PropertyMetadata.BookingPayments.GetValue(this); }
    }

    /// <summary>Gets the BookingReminders. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="BookingReminders", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<BookingReminder> BookingReminders {
      get { return PropertyMetadata.BookingReminders.GetValue(this); }
    }

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The BookingId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> BookingId = new IbEm.DataEntityProperty<Booking, int>("BookingId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> AccoId = new IbEm.DataEntityProperty<Booking, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The Booked <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.DateTime> Booked = new IbEm.DataEntityProperty<Booking, System.DateTime>("Booked", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsBookedOnline <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, bool> IsBookedOnline = new IbEm.DataEntityProperty<Booking, bool>("IsBookedOnline", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Confirmed <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>> Confirmed = new IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>>("Confirmed", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Arrival <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.DateTime> Arrival = new IbEm.DataEntityProperty<Booking, System.DateTime>("Arrival", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Departure <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.DateTime> Departure = new IbEm.DataEntityProperty<Booking, System.DateTime>("Departure", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Adults <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> Adults = new IbEm.DataEntityProperty<Booking, int>("Adults", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Children <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> Children = new IbEm.DataEntityProperty<Booking, int>("Children", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Pets <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> Pets = new IbEm.DataEntityProperty<Booking, int>("Pets", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Additions <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> Additions = new IbEm.DataEntityProperty<Booking, decimal>("Additions", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Usage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> Usage = new IbEm.DataEntityProperty<Booking, decimal>("Usage", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Rent <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> Rent = new IbEm.DataEntityProperty<Booking, decimal>("Rent", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Deposit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> Deposit = new IbEm.DataEntityProperty<Booking, decimal>("Deposit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaysToPayDepositBackAfterDeparture <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> DaysToPayDepositBackAfterDeparture = new IbEm.DataEntityProperty<Booking, int>("DaysToPayDepositBackAfterDeparture", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CancelAdministrationCosts <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> CancelAdministrationCosts = new IbEm.DataEntityProperty<Booking, decimal>("CancelAdministrationCosts", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Notes <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> Notes = new IbEm.DataEntityProperty<Booking, string>("Notes", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Status <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> Status = new IbEm.DataEntityProperty<Booking, string>("Status", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StatusUpdate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.DateTime> StatusUpdate = new IbEm.DataEntityProperty<Booking, System.DateTime>("StatusUpdate", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsConfirmed <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, bool> IsConfirmed = new IbEm.DataEntityProperty<Booking, bool>("IsConfirmed", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsAmountExactlyScheduled <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, bool> IsAmountExactlyScheduled = new IbEm.DataEntityProperty<Booking, bool>("IsAmountExactlyScheduled", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ArrivalGas <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> ArrivalGas = new IbEm.DataEntityProperty<Booking, decimal>("ArrivalGas", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ArrivalWater <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> ArrivalWater = new IbEm.DataEntityProperty<Booking, decimal>("ArrivalWater", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ArrivalElectricity <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> ArrivalElectricity = new IbEm.DataEntityProperty<Booking, decimal>("ArrivalElectricity", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DepartureGas <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> DepartureGas = new IbEm.DataEntityProperty<Booking, decimal>("DepartureGas", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DepartureWater <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> DepartureWater = new IbEm.DataEntityProperty<Booking, decimal>("DepartureWater", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DepartureElectricity <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, decimal> DepartureElectricity = new IbEm.DataEntityProperty<Booking, decimal>("DepartureElectricity", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsBlock <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, bool> IsBlock = new IbEm.DataEntityProperty<Booking, bool>("IsBlock", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookingColor <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookingColor = new IbEm.DataEntityProperty<Booking, string>("BookingColor", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Booker <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> Booker = new IbEm.DataEntityProperty<Booking, string>("Booker", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerLanguageId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> BookerLanguageId = new IbEm.DataEntityProperty<Booking, int>("BookerLanguageId", false, false, IbEm.ConcurrencyStrategy.None, false, "Language");

      /// <summary>The BookerEmail <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerEmail = new IbEm.DataEntityProperty<Booking, string>("BookerEmail", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerPhone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerPhone = new IbEm.DataEntityProperty<Booking, string>("BookerPhone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerMobile <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerMobile = new IbEm.DataEntityProperty<Booking, string>("BookerMobile", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerAddress1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerAddress1 = new IbEm.DataEntityProperty<Booking, string>("BookerAddress1", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerAddress2 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerAddress2 = new IbEm.DataEntityProperty<Booking, string>("BookerAddress2", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerAddress3 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerAddress3 = new IbEm.DataEntityProperty<Booking, string>("BookerAddress3", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerCountryId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, int> BookerCountryId = new IbEm.DataEntityProperty<Booking, int>("BookerCountryId", false, false, IbEm.ConcurrencyStrategy.None, false, "Country");

      /// <summary>The BookerBank <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerBank = new IbEm.DataEntityProperty<Booking, string>("BookerBank", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerBankAccount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> BookerBankAccount = new IbEm.DataEntityProperty<Booking, string>("BookerBankAccount", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The HomeContact <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> HomeContact = new IbEm.DataEntityProperty<Booking, string>("HomeContact", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RegistrationNumber <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> RegistrationNumber = new IbEm.DataEntityProperty<Booking, string>("RegistrationNumber", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> CreatedUser = new IbEm.DataEntityProperty<Booking, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<Booking, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, string> ModifyUser = new IbEm.DataEntityProperty<Booking, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<Booking, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerLatitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<decimal>> BookerLatitude = new IbEm.DataEntityProperty<Booking, System.Nullable<decimal>>("BookerLatitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BookerLongitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Booking, System.Nullable<decimal>> BookerLongitude = new IbEm.DataEntityProperty<Booking, System.Nullable<decimal>>("BookerLongitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoNotifications <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, AccoNotification> AccoNotifications = new IbEm.NavigationListEntityProperty<Booking, AccoNotification>("AccoNotifications", true, "FK_AccoNotification_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The Country <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Booking, Country> Country = new IbEm.NavigationScalarEntityProperty<Booking, Country>("Country", true, "FK_Booking_Country", IbEm.QueryDirection.ToRole2);

      /// <summary>The Language <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Booking, Language> Language = new IbEm.NavigationScalarEntityProperty<Booking, Language>("Language", true, "FK_Booking_Language", IbEm.QueryDirection.ToRole2);

      /// <summary>The BookingAdditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, BookingAddition> BookingAdditions = new IbEm.NavigationListEntityProperty<Booking, BookingAddition>("BookingAdditions", true, "FK_BookingAddition_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The BookingCancelConditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, BookingCancelCondition> BookingCancelConditions = new IbEm.NavigationListEntityProperty<Booking, BookingCancelCondition>("BookingCancelConditions", true, "FK_BookingCancelCondition_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The BookingGuests <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, BookingGuest> BookingGuests = new IbEm.NavigationListEntityProperty<Booking, BookingGuest>("BookingGuests", true, "FK_BookingGuest_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The BookingPayments <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, BookingPayment> BookingPayments = new IbEm.NavigationListEntityProperty<Booking, BookingPayment>("BookingPayments", true, "FK_BookingPayment_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The BookingReminders <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Booking, BookingReminder> BookingReminders = new IbEm.NavigationListEntityProperty<Booking, BookingReminder>("BookingReminders", true, "FK_BookingReminder_Booking", IbEm.QueryDirection.ToRole1);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Booking, Acco> Acco = new IbEm.NavigationScalarEntityProperty<Booking, Acco>("Acco", true, "FK_Booking_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String BookingId = "BookingId";
      public const String AccoId = "AccoId";
      public const String Booked = "Booked";
      public const String IsBookedOnline = "IsBookedOnline";
      public const String Confirmed = "Confirmed";
      public const String Arrival = "Arrival";
      public const String Departure = "Departure";
      public const String Adults = "Adults";
      public const String Children = "Children";
      public const String Pets = "Pets";
      public const String Additions = "Additions";
      public const String Usage = "Usage";
      public const String Rent = "Rent";
      public const String Deposit = "Deposit";
      public const String DaysToPayDepositBackAfterDeparture = "DaysToPayDepositBackAfterDeparture";
      public const String CancelAdministrationCosts = "CancelAdministrationCosts";
      public const String Notes = "Notes";
      public const String Status = "Status";
      public const String StatusUpdate = "StatusUpdate";
      public const String IsConfirmed = "IsConfirmed";
      public const String IsAmountExactlyScheduled = "IsAmountExactlyScheduled";
      public const String ArrivalGas = "ArrivalGas";
      public const String ArrivalWater = "ArrivalWater";
      public const String ArrivalElectricity = "ArrivalElectricity";
      public const String DepartureGas = "DepartureGas";
      public const String DepartureWater = "DepartureWater";
      public const String DepartureElectricity = "DepartureElectricity";
      public const String IsBlock = "IsBlock";
      public const String BookingColor = "BookingColor";
      public const String Booker = "Booker";
      public const String BookerLanguageId = "BookerLanguageId";
      public const String BookerEmail = "BookerEmail";
      public const String BookerPhone = "BookerPhone";
      public const String BookerMobile = "BookerMobile";
      public const String BookerAddress1 = "BookerAddress1";
      public const String BookerAddress2 = "BookerAddress2";
      public const String BookerAddress3 = "BookerAddress3";
      public const String BookerCountryId = "BookerCountryId";
      public const String BookerBank = "BookerBank";
      public const String BookerBankAccount = "BookerBankAccount";
      public const String HomeContact = "HomeContact";
      public const String RegistrationNumber = "RegistrationNumber";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String BookerLatitude = "BookerLatitude";
      public const String BookerLongitude = "BookerLongitude";
      public const String AccoNotifications = "AccoNotifications";
      public const String Country = "Country";
      public const String Language = "Language";
      public const String BookingAdditions = "BookingAdditions";
      public const String BookingCancelConditions = "BookingCancelConditions";
      public const String BookingGuests = "BookingGuests";
      public const String BookingPayments = "BookingPayments";
      public const String BookingReminders = "BookingReminders";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion Booking class

  #region AccoAttachment class

  /// <summary>The auto-generated AccoAttachment class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.AccoAttachments")]
  public partial class AccoAttachment : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<AccoAttachment, object>> expr) {
      return IbCore.PropertyPath.For<AccoAttachment>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoAttachmentId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoAttachmentId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAttachment_AccoAttachmentId")]
    public int AccoAttachmentId {
      get { return PropertyMetadata.AccoAttachmentId.GetValue(this); }
      set { PropertyMetadata.AccoAttachmentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAttachment_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="AccoAttachment_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Acco. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Acco", AutoGenerateField=false)]
    public Acco Acco {
      get { return PropertyMetadata.Acco.GetValue(this); }
      set { PropertyMetadata.Acco.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoAttachmentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAttachment, int> AccoAttachmentId = new IbEm.DataEntityProperty<AccoAttachment, int>("AccoAttachmentId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAttachment, int> AccoId = new IbEm.DataEntityProperty<AccoAttachment, int>("AccoId", false, false, IbEm.ConcurrencyStrategy.None, false, "Acco");

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<AccoAttachment, string> Name = new IbEm.DataEntityProperty<AccoAttachment, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Acco <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<AccoAttachment, Acco> Acco = new IbEm.NavigationScalarEntityProperty<AccoAttachment, Acco>("Acco", true, "FK_AccoAttachment_Acco", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoAttachmentId = "AccoAttachmentId";
      public const String AccoId = "AccoId";
      public const String Name = "Name";
      public const String Acco = "Acco";
    }
    #endregion EntityPropertyNames
  }
  #endregion AccoAttachment class

  #region Acco class

  /// <summary>The auto-generated Acco class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"AccoBookingEntities")]
  [IbEm.DefaultEntitySetName(@"AccoBookingEntities.Accoes")]
  public partial class Acco : EntityBase {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Acco, object>> expr) {
      return IbCore.PropertyPath.For<Acco>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the AccoId. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_AccoId")]
    public int AccoId {
      get { return PropertyMetadata.AccoId.GetValue(this); }
      set { PropertyMetadata.AccoId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DisplaySequence. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DisplaySequence", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_DisplaySequence")]
    public int DisplaySequence {
      get { return PropertyMetadata.DisplaySequence.GetValue(this); }
      set { PropertyMetadata.DisplaySequence.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoOwnerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="AccoOwnerId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_AccoOwnerId")]
    public int AccoOwnerId {
      get { return PropertyMetadata.AccoOwnerId.GetValue(this); }
      set { PropertyMetadata.AccoOwnerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DefaultPayPatternId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="DefaultPayPatternId", AutoGenerateField=false)]
    public System.Nullable<int> DefaultPayPatternId {
      get { return PropertyMetadata.DefaultPayPatternId.GetValue(this); }
      set { PropertyMetadata.DefaultPayPatternId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DefaultPeriodUnitId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DefaultPeriodUnitId", AutoGenerateField=true)]
    public System.Nullable<int> DefaultPeriodUnitId {
      get { return PropertyMetadata.DefaultPeriodUnitId.GetValue(this); }
      set { PropertyMetadata.DefaultPeriodUnitId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address1. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address1", AutoGenerateField=true)]
    public string Address1 {
      get { return PropertyMetadata.Address1.GetValue(this); }
      set { PropertyMetadata.Address1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address2. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address2", AutoGenerateField=true)]
    public string Address2 {
      get { return PropertyMetadata.Address2.GetValue(this); }
      set { PropertyMetadata.Address2.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Address3. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Address3", AutoGenerateField=true)]
    public string Address3 {
      get { return PropertyMetadata.Address3.GetValue(this); }
      set { PropertyMetadata.Address3.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CountryId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="CountryId", AutoGenerateField=false)]
    public System.Nullable<int> CountryId {
      get { return PropertyMetadata.CountryId.GetValue(this); }
      set { PropertyMetadata.CountryId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Latitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Latitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Latitude {
      get { return PropertyMetadata.Latitude.GetValue(this); }
      set { PropertyMetadata.Latitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Longitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Longitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Longitude {
      get { return PropertyMetadata.Longitude.GetValue(this); }
      set { PropertyMetadata.Longitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MapLocation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MapLocation", AutoGenerateField=true)]
    public string MapLocation {
      get { return PropertyMetadata.MapLocation.GetValue(this); }
      set { PropertyMetadata.MapLocation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the OwnWebsite. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="OwnWebsite", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_OwnWebsite")]
    public string OwnWebsite {
      get { return PropertyMetadata.OwnWebsite.GetValue(this); }
      set { PropertyMetadata.OwnWebsite.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysToPayDepositBackAfterDeparture. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysToPayDepositBackAfterDeparture", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_DaysToPayDepositBackAfterDeparture")]
    public int DaysToPayDepositBackAfterDeparture {
      get { return PropertyMetadata.DaysToPayDepositBackAfterDeparture.GetValue(this); }
      set { PropertyMetadata.DaysToPayDepositBackAfterDeparture.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Currency. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Currency", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Acco_Currency")]
    public string Currency {
      get { return PropertyMetadata.Currency.GetValue(this); }
      set { PropertyMetadata.Currency.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Location. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Location", AutoGenerateField=true)]
    public string Location {
      get { return PropertyMetadata.Location.GetValue(this); }
      set { PropertyMetadata.Location.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoType. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccoType", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_AccoType")]
    public string AccoType {
      get { return PropertyMetadata.AccoType.GetValue(this); }
      set { PropertyMetadata.AccoType.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ArriveAfter. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ArriveAfter", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Acco_ArriveAfter")]
    public string ArriveAfter {
      get { return PropertyMetadata.ArriveAfter.GetValue(this); }
      set { PropertyMetadata.ArriveAfter.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DepartureBefore. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DepartureBefore", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Acco_DepartureBefore")]
    public string DepartureBefore {
      get { return PropertyMetadata.DepartureBefore.GetValue(this); }
      set { PropertyMetadata.DepartureBefore.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DaysToExpire. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DaysToExpire", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_DaysToExpire")]
    public int DaysToExpire {
      get { return PropertyMetadata.DaysToExpire.GetValue(this); }
      set { PropertyMetadata.DaysToExpire.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartWeekdayCalendar. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartWeekdayCalendar", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_StartWeekdayCalendar")]
    public string StartWeekdayCalendar {
      get { return PropertyMetadata.StartWeekdayCalendar.GetValue(this); }
      set { PropertyMetadata.StartWeekdayCalendar.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Deposit. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Deposit", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_Deposit")]
    public decimal Deposit {
      get { return PropertyMetadata.Deposit.GetValue(this); }
      set { PropertyMetadata.Deposit.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CancelAdministrationCosts. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CancelAdministrationCosts", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_CancelAdministrationCosts")]
    public decimal CancelAdministrationCosts {
      get { return PropertyMetadata.CancelAdministrationCosts.GetValue(this); }
      set { PropertyMetadata.CancelAdministrationCosts.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IsActive. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IsActive", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_IsActive")]
    public bool IsActive {
      get { return PropertyMetadata.IsActive.GetValue(this); }
      set { PropertyMetadata.IsActive.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LicenceExpiration. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LicenceExpiration", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> LicenceExpiration {
      get { return PropertyMetadata.LicenceExpiration.GetValue(this); }
      set { PropertyMetadata.LicenceExpiration.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastLogin. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastLogin", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> LastLogin {
      get { return PropertyMetadata.LastLogin.GetValue(this); }
      set { PropertyMetadata.LastLogin.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ColorOwner. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ColorOwner", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_ColorOwner")]
    public string ColorOwner {
      get { return PropertyMetadata.ColorOwner.GetValue(this); }
      set { PropertyMetadata.ColorOwner.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ColorBlock. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ColorBlock", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_ColorBlock")]
    public string ColorBlock {
      get { return PropertyMetadata.ColorBlock.GetValue(this); }
      set { PropertyMetadata.ColorBlock.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ColorOnline. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ColorOnline", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="Acco_ColorOnline")]
    public string ColorOnline {
      get { return PropertyMetadata.ColorOnline.GetValue(this); }
      set { PropertyMetadata.ColorOnline.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BaseRentId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="BaseRentId", AutoGenerateField=false)]
    public System.Nullable<int> BaseRentId {
      get { return PropertyMetadata.BaseRentId.GetValue(this); }
      set { PropertyMetadata.BaseRentId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SendWeeklyReminders. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SendWeeklyReminders", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Acco_SendWeeklyReminders")]
    public bool SendWeeklyReminders {
      get { return PropertyMetadata.SendWeeklyReminders.GetValue(this); }
      set { PropertyMetadata.SendWeeklyReminders.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timestamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timestamp", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Timestamp {
      get { return PropertyMetadata.Timestamp.GetValue(this); }
      set { PropertyMetadata.Timestamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Created. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Created", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Created {
      get { return PropertyMetadata.Created.GetValue(this); }
      set { PropertyMetadata.Created.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CreatedUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CreatedUser", AutoGenerateField=true)]
    public string CreatedUser {
      get { return PropertyMetadata.CreatedUser.GetValue(this); }
      set { PropertyMetadata.CreatedUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Modified. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Modified", AutoGenerateField=true)]
    public System.Nullable<System.DateTime> Modified {
      get { return PropertyMetadata.Modified.GetValue(this); }
      set { PropertyMetadata.Modified.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ModifyUser. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ModifyUser", AutoGenerateField=true)]
    public string ModifyUser {
      get { return PropertyMetadata.ModifyUser.GetValue(this); }
      set { PropertyMetadata.ModifyUser.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RowVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RowVersion", AutoGenerateField=true)]
    public System.Nullable<int> RowVersion {
      get { return PropertyMetadata.RowVersion.GetValue(this); }
      set { PropertyMetadata.RowVersion.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the AccoOwner. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoOwner", AutoGenerateField=false)]
    public AccoOwner AccoOwner {
      get { return PropertyMetadata.AccoOwner.GetValue(this); }
      set { PropertyMetadata.AccoOwner.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoPayPattern. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoPayPattern", AutoGenerateField=false)]
    public AccoPayPattern AccoPayPattern {
      get { return PropertyMetadata.AccoPayPattern.GetValue(this); }
      set { PropertyMetadata.AccoPayPattern.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccoRent. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoRent", AutoGenerateField=false)]
    public AccoRent AccoRent {
      get { return PropertyMetadata.AccoRent.GetValue(this); }
      set { PropertyMetadata.AccoRent.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Country. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Country", AutoGenerateField=false)]
    public Country Country {
      get { return PropertyMetadata.Country.GetValue(this); }
      set { PropertyMetadata.Country.SetValue(this, value); }
    }

    /// <summary>Gets the AccoAdditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAdditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoAddition> AccoAdditions {
      get { return PropertyMetadata.AccoAdditions.GetValue(this); }
    }

    /// <summary>Gets the AccoAttachments. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoAttachments", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoAttachment> AccoAttachments {
      get { return PropertyMetadata.AccoAttachments.GetValue(this); }
    }

    /// <summary>Gets the AccoCancelConditions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoCancelConditions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoCancelCondition> AccoCancelConditions {
      get { return PropertyMetadata.AccoCancelConditions.GetValue(this); }
    }

    /// <summary>Gets the AccoDescriptions. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoDescriptions", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoDescription> AccoDescriptions {
      get { return PropertyMetadata.AccoDescriptions.GetValue(this); }
    }

    /// <summary>Gets the AccoNotifications. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoNotifications", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoNotification> AccoNotifications {
      get { return PropertyMetadata.AccoNotifications.GetValue(this); }
    }

    /// <summary>Gets the AccoPayPatterns. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoPayPatterns", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoPayPattern> AccoPayPatterns {
      get { return PropertyMetadata.AccoPayPatterns.GetValue(this); }
    }

    /// <summary>Gets the AccoReminders. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoReminders", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoReminder> AccoReminders {
      get { return PropertyMetadata.AccoReminders.GetValue(this); }
    }

    /// <summary>Gets the AccoRents. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoRents", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoRent> AccoRents {
      get { return PropertyMetadata.AccoRents.GetValue(this); }
    }

    /// <summary>Gets the AccoSeasons. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoSeasons", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoSeason> AccoSeasons {
      get { return PropertyMetadata.AccoSeasons.GetValue(this); }
    }

    /// <summary>Gets the Bookings. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Bookings", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Booking> Bookings {
      get { return PropertyMetadata.Bookings.GetValue(this); }
    }

    /// <summary>Gets the AccoSpecialOffers. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="AccoSpecialOffers", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<AccoSpecialOffer> AccoSpecialOffers {
      get { return PropertyMetadata.AccoSpecialOffers.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The AccoId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, int> AccoId = new IbEm.DataEntityProperty<Acco, int>("AccoId", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DisplaySequence <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, int> DisplaySequence = new IbEm.DataEntityProperty<Acco, int>("DisplaySequence", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwnerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, int> AccoOwnerId = new IbEm.DataEntityProperty<Acco, int>("AccoOwnerId", false, false, IbEm.ConcurrencyStrategy.None, false, "AccoOwner");

      /// <summary>The DefaultPayPatternId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<int>> DefaultPayPatternId = new IbEm.DataEntityProperty<Acco, System.Nullable<int>>("DefaultPayPatternId", true, false, IbEm.ConcurrencyStrategy.None, false, "AccoPayPattern");

      /// <summary>The DefaultPeriodUnitId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<int>> DefaultPeriodUnitId = new IbEm.DataEntityProperty<Acco, System.Nullable<int>>("DefaultPeriodUnitId", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Address1 = new IbEm.DataEntityProperty<Acco, string>("Address1", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address2 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Address2 = new IbEm.DataEntityProperty<Acco, string>("Address2", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Address3 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Address3 = new IbEm.DataEntityProperty<Acco, string>("Address3", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CountryId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<int>> CountryId = new IbEm.DataEntityProperty<Acco, System.Nullable<int>>("CountryId", true, false, IbEm.ConcurrencyStrategy.None, false, "Country");

      /// <summary>The Latitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<decimal>> Latitude = new IbEm.DataEntityProperty<Acco, System.Nullable<decimal>>("Latitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Longitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<decimal>> Longitude = new IbEm.DataEntityProperty<Acco, System.Nullable<decimal>>("Longitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MapLocation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> MapLocation = new IbEm.DataEntityProperty<Acco, string>("MapLocation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The OwnWebsite <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> OwnWebsite = new IbEm.DataEntityProperty<Acco, string>("OwnWebsite", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaysToPayDepositBackAfterDeparture <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, int> DaysToPayDepositBackAfterDeparture = new IbEm.DataEntityProperty<Acco, int>("DaysToPayDepositBackAfterDeparture", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Currency <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Currency = new IbEm.DataEntityProperty<Acco, string>("Currency", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Description = new IbEm.DataEntityProperty<Acco, string>("Description", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Location <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> Location = new IbEm.DataEntityProperty<Acco, string>("Location", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoType <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> AccoType = new IbEm.DataEntityProperty<Acco, string>("AccoType", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ArriveAfter <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> ArriveAfter = new IbEm.DataEntityProperty<Acco, string>("ArriveAfter", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DepartureBefore <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> DepartureBefore = new IbEm.DataEntityProperty<Acco, string>("DepartureBefore", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DaysToExpire <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, int> DaysToExpire = new IbEm.DataEntityProperty<Acco, int>("DaysToExpire", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartWeekdayCalendar <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> StartWeekdayCalendar = new IbEm.DataEntityProperty<Acco, string>("StartWeekdayCalendar", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Deposit <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, decimal> Deposit = new IbEm.DataEntityProperty<Acco, decimal>("Deposit", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CancelAdministrationCosts <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, decimal> CancelAdministrationCosts = new IbEm.DataEntityProperty<Acco, decimal>("CancelAdministrationCosts", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IsActive <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, bool> IsActive = new IbEm.DataEntityProperty<Acco, bool>("IsActive", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LicenceExpiration <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>> LicenceExpiration = new IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>>("LicenceExpiration", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LastLogin <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>> LastLogin = new IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>>("LastLogin", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ColorOwner <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> ColorOwner = new IbEm.DataEntityProperty<Acco, string>("ColorOwner", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ColorBlock <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> ColorBlock = new IbEm.DataEntityProperty<Acco, string>("ColorBlock", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ColorOnline <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> ColorOnline = new IbEm.DataEntityProperty<Acco, string>("ColorOnline", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BaseRentId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<int>> BaseRentId = new IbEm.DataEntityProperty<Acco, System.Nullable<int>>("BaseRentId", true, false, IbEm.ConcurrencyStrategy.None, false, "AccoRent");

      /// <summary>The SendWeeklyReminders <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, bool> SendWeeklyReminders = new IbEm.DataEntityProperty<Acco, bool>("SendWeeklyReminders", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timestamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>> Timestamp = new IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>>("Timestamp", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Created <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>> Created = new IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>>("Created", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CreatedUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> CreatedUser = new IbEm.DataEntityProperty<Acco, string>("CreatedUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Modified <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>> Modified = new IbEm.DataEntityProperty<Acco, System.Nullable<System.DateTime>>("Modified", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ModifyUser <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, string> ModifyUser = new IbEm.DataEntityProperty<Acco, string>("ModifyUser", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RowVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Acco, System.Nullable<int>> RowVersion = new IbEm.DataEntityProperty<Acco, System.Nullable<int>>("RowVersion", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccoOwner <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Acco, AccoOwner> AccoOwner = new IbEm.NavigationScalarEntityProperty<Acco, AccoOwner>("AccoOwner", true, "FK_Acco_AccoOwner", IbEm.QueryDirection.ToRole2);

      /// <summary>The AccoPayPattern <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Acco, AccoPayPattern> AccoPayPattern = new IbEm.NavigationScalarEntityProperty<Acco, AccoPayPattern>("AccoPayPattern", true, "FK_Acco_AccoPayPattern", IbEm.QueryDirection.ToRole2);

      /// <summary>The AccoRent <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Acco, AccoRent> AccoRent = new IbEm.NavigationScalarEntityProperty<Acco, AccoRent>("AccoRent", true, "FK_Acco_AccoRent", IbEm.QueryDirection.ToRole2);

      /// <summary>The Country <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Acco, Country> Country = new IbEm.NavigationScalarEntityProperty<Acco, Country>("Country", true, "FK_Acco_Country", IbEm.QueryDirection.ToRole2);

      /// <summary>The AccoAdditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoAddition> AccoAdditions = new IbEm.NavigationListEntityProperty<Acco, AccoAddition>("AccoAdditions", true, "FK_AccoAddition_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoAttachments <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoAttachment> AccoAttachments = new IbEm.NavigationListEntityProperty<Acco, AccoAttachment>("AccoAttachments", true, "FK_AccoAttachment_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoCancelConditions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoCancelCondition> AccoCancelConditions = new IbEm.NavigationListEntityProperty<Acco, AccoCancelCondition>("AccoCancelConditions", true, "FK_AccoCancelCondition_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoDescriptions <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoDescription> AccoDescriptions = new IbEm.NavigationListEntityProperty<Acco, AccoDescription>("AccoDescriptions", true, "FK_AccoDescription_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoNotifications <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoNotification> AccoNotifications = new IbEm.NavigationListEntityProperty<Acco, AccoNotification>("AccoNotifications", true, "FK_AccoNotification_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoPayPatterns <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoPayPattern> AccoPayPatterns = new IbEm.NavigationListEntityProperty<Acco, AccoPayPattern>("AccoPayPatterns", true, "FK_AccoPayPattern_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoReminders <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoReminder> AccoReminders = new IbEm.NavigationListEntityProperty<Acco, AccoReminder>("AccoReminders", true, "FK_AccoReminder_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoRents <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoRent> AccoRents = new IbEm.NavigationListEntityProperty<Acco, AccoRent>("AccoRents", true, "FK_AccoRent_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoSeasons <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoSeason> AccoSeasons = new IbEm.NavigationListEntityProperty<Acco, AccoSeason>("AccoSeasons", true, "FK_AccoSeason_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The Bookings <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, Booking> Bookings = new IbEm.NavigationListEntityProperty<Acco, Booking>("Bookings", true, "FK_Booking_Acco", IbEm.QueryDirection.ToRole1);

      /// <summary>The AccoSpecialOffers <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Acco, AccoSpecialOffer> AccoSpecialOffers = new IbEm.NavigationListEntityProperty<Acco, AccoSpecialOffer>("AccoSpecialOffers", true, "FK_SpecialOffer_Acco", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : EntityBase.EntityPropertyNames {
      public const String AccoId = "AccoId";
      public const String DisplaySequence = "DisplaySequence";
      public const String AccoOwnerId = "AccoOwnerId";
      public const String DefaultPayPatternId = "DefaultPayPatternId";
      public const String DefaultPeriodUnitId = "DefaultPeriodUnitId";
      public const String Address1 = "Address1";
      public const String Address2 = "Address2";
      public const String Address3 = "Address3";
      public const String CountryId = "CountryId";
      public const String Latitude = "Latitude";
      public const String Longitude = "Longitude";
      public const String MapLocation = "MapLocation";
      public const String OwnWebsite = "OwnWebsite";
      public const String DaysToPayDepositBackAfterDeparture = "DaysToPayDepositBackAfterDeparture";
      public const String Currency = "Currency";
      public const String Description = "Description";
      public const String Location = "Location";
      public const String AccoType = "AccoType";
      public const String ArriveAfter = "ArriveAfter";
      public const String DepartureBefore = "DepartureBefore";
      public const String DaysToExpire = "DaysToExpire";
      public const String StartWeekdayCalendar = "StartWeekdayCalendar";
      public const String Deposit = "Deposit";
      public const String CancelAdministrationCosts = "CancelAdministrationCosts";
      public const String IsActive = "IsActive";
      public const String LicenceExpiration = "LicenceExpiration";
      public const String LastLogin = "LastLogin";
      public const String ColorOwner = "ColorOwner";
      public const String ColorBlock = "ColorBlock";
      public const String ColorOnline = "ColorOnline";
      public const String BaseRentId = "BaseRentId";
      public const String SendWeeklyReminders = "SendWeeklyReminders";
      public const String Timestamp = "Timestamp";
      public const String Created = "Created";
      public const String CreatedUser = "CreatedUser";
      public const String Modified = "Modified";
      public const String ModifyUser = "ModifyUser";
      public const String RowVersion = "RowVersion";
      public const String AccoOwner = "AccoOwner";
      public const String AccoPayPattern = "AccoPayPattern";
      public const String AccoRent = "AccoRent";
      public const String Country = "Country";
      public const String AccoAdditions = "AccoAdditions";
      public const String AccoAttachments = "AccoAttachments";
      public const String AccoCancelConditions = "AccoCancelConditions";
      public const String AccoDescriptions = "AccoDescriptions";
      public const String AccoNotifications = "AccoNotifications";
      public const String AccoPayPatterns = "AccoPayPatterns";
      public const String AccoReminders = "AccoReminders";
      public const String AccoRents = "AccoRents";
      public const String AccoSeasons = "AccoSeasons";
      public const String Bookings = "Bookings";
      public const String AccoSpecialOffers = "AccoSpecialOffers";
    }
    #endregion EntityPropertyNames
  }
  #endregion Acco class

  #region Injected base classes
  [DataContract(IsReference=true)]
  [IbEm.DiscoverableType(IbEm.DiscoverableTypeMode.KnownType)]
  public abstract partial class EntityBase : IbEm.Entity {
  }
  #endregion Injected base classes

  #region EntityRelations

  /// <summary>
  /// A generated class that returns the relations between entities in this model.
  /// </summary>
  [IbCore.IdeaBladeGuid("09db4df5-5f13-407c-8c71-48e9f7438abf", "2.1.4")]
  public partial class EntityRelations : IbEm.IEntityRelations {

    /// Explicit static constructor ensures static fields are initialized.
    static EntityRelations() {}

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoAdditionDescription"/> and <see cref="AccoAddition"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoAdditionDescription_AccoAddition = new IbEm.EntityRelation(
      typeof(AccoAdditionDescription),
      typeof(AccoAddition),
       new IbEm.DataEntityProperty[] { AccoAdditionDescription.PropertyMetadata.AccoAdditionId},
       new IbEm.DataEntityProperty[] { AccoAddition.PropertyMetadata.AccoAdditionId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoAdditionDescription_AccoAddition");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingAddition"/> and <see cref="AccoAddition"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingAddition_AccoAddition = new IbEm.EntityRelation(
      typeof(BookingAddition),
      typeof(AccoAddition),
       new IbEm.DataEntityProperty[] { BookingAddition.PropertyMetadata.AccoAdditionId},
       new IbEm.DataEntityProperty[] { AccoAddition.PropertyMetadata.AccoAdditionId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_BookingAddition_AccoAddition");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoAdditionDescription"/> and <see cref="Language"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoAdditionDescription_Language = new IbEm.EntityRelation(
      typeof(AccoAdditionDescription),
      typeof(Language),
       new IbEm.DataEntityProperty[] { AccoAdditionDescription.PropertyMetadata.LanguageId},
       new IbEm.DataEntityProperty[] { Language.PropertyMetadata.LanguageId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoAdditionDescription_Language");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingCancelCondition"/> and <see cref="AccoCancelCondition"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingCancelCondition_AccoCancelCondition = new IbEm.EntityRelation(
      typeof(BookingCancelCondition),
      typeof(AccoCancelCondition),
       new IbEm.DataEntityProperty[] { BookingCancelCondition.PropertyMetadata.AccoCancelConditionId},
       new IbEm.DataEntityProperty[] { AccoCancelCondition.PropertyMetadata.AccoCancelConditionId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_BookingCancelCondition_AccoCancelCondition");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoNotification"/> and <see cref="AccoOwner"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoNotification_AccoOwner = new IbEm.EntityRelation(
      typeof(AccoNotification),
      typeof(AccoOwner),
       new IbEm.DataEntityProperty[] { AccoNotification.PropertyMetadata.AccoOwnerId},
       new IbEm.DataEntityProperty[] { AccoOwner.PropertyMetadata.AccoOwnerId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoNotification_AccoOwner");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoOwner"/> and <see cref="Country"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoOwner_AccoCountry = new IbEm.EntityRelation(
      typeof(AccoOwner),
      typeof(Country),
       new IbEm.DataEntityProperty[] { AccoOwner.PropertyMetadata.CountryId},
       new IbEm.DataEntityProperty[] { Country.PropertyMetadata.CountryId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoOwner_AccoCountry");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoOwner"/> and <see cref="Language"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoOwner_AccoLanguage = new IbEm.EntityRelation(
      typeof(AccoOwner),
      typeof(Language),
       new IbEm.DataEntityProperty[] { AccoOwner.PropertyMetadata.LanguageId},
       new IbEm.DataEntityProperty[] { Language.PropertyMetadata.LanguageId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoOwner_AccoLanguage");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoTrustee"/> and <see cref="AccoOwner"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Trustee_AccoOwner = new IbEm.EntityRelation(
      typeof(AccoTrustee),
      typeof(AccoOwner),
       new IbEm.DataEntityProperty[] { AccoTrustee.PropertyMetadata.AccoOwnerId},
       new IbEm.DataEntityProperty[] { AccoOwner.PropertyMetadata.AccoOwnerId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Trustee_AccoOwner");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoPayPatternPayment"/> and <see cref="AccoPayPattern"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoPayPatternPayment_AccoPayPattern = new IbEm.EntityRelation(
      typeof(AccoPayPatternPayment),
      typeof(AccoPayPattern),
       new IbEm.DataEntityProperty[] { AccoPayPatternPayment.PropertyMetadata.AccoPayPatternId},
       new IbEm.DataEntityProperty[] { AccoPayPattern.PropertyMetadata.AccoPayPatternId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoPayPatternPayment_AccoPayPattern");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingReminder"/> and <see cref="AccoReminder"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingReminder_AccoReminder = new IbEm.EntityRelation(
      typeof(BookingReminder),
      typeof(AccoReminder),
       new IbEm.DataEntityProperty[] { BookingReminder.PropertyMetadata.AccoReminderId},
       new IbEm.DataEntityProperty[] { AccoReminder.PropertyMetadata.AccoReminderId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_BookingReminder_AccoReminder");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoSeason"/> and <see cref="AccoRent"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoSeason_AccoRent = new IbEm.EntityRelation(
      typeof(AccoSeason),
      typeof(AccoRent),
       new IbEm.DataEntityProperty[] { AccoSeason.PropertyMetadata.AccoRentId},
       new IbEm.DataEntityProperty[] { AccoRent.PropertyMetadata.AccoRentId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoSeason_AccoRent");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoSpecialOffer"/> and <see cref="Language"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_SpecialOffer_Language = new IbEm.EntityRelation(
      typeof(AccoSpecialOffer),
      typeof(Language),
       new IbEm.DataEntityProperty[] { AccoSpecialOffer.PropertyMetadata.LanguageId},
       new IbEm.DataEntityProperty[] { Language.PropertyMetadata.LanguageId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_SpecialOffer_Language");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="SystemCode"/> and <see cref="SystemGroup"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_SystemCode_SystemGroup = new IbEm.EntityRelation(
      typeof(SystemCode),
      typeof(SystemGroup),
       new IbEm.DataEntityProperty[] { SystemCode.PropertyMetadata.GroupId},
       new IbEm.DataEntityProperty[] { SystemGroup.PropertyMetadata.GroupId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_SystemCode_SystemGroup");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoDescription"/> and <see cref="Language"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoDescription_Language = new IbEm.EntityRelation(
      typeof(AccoDescription),
      typeof(Language),
       new IbEm.DataEntityProperty[] { AccoDescription.PropertyMetadata.LanguageId},
       new IbEm.DataEntityProperty[] { Language.PropertyMetadata.LanguageId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoDescription_Language");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoNotification"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoNotification_Booking = new IbEm.EntityRelation(
      typeof(AccoNotification),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { AccoNotification.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoNotification_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Booking"/> and <see cref="Country"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Booking_Country = new IbEm.EntityRelation(
      typeof(Booking),
      typeof(Country),
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookerCountryId},
       new IbEm.DataEntityProperty[] { Country.PropertyMetadata.CountryId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Booking_Country");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Booking"/> and <see cref="Language"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Booking_Language = new IbEm.EntityRelation(
      typeof(Booking),
      typeof(Language),
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookerLanguageId},
       new IbEm.DataEntityProperty[] { Language.PropertyMetadata.LanguageId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Booking_Language");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingAddition"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingAddition_Booking = new IbEm.EntityRelation(
      typeof(BookingAddition),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { BookingAddition.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_BookingAddition_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingCancelCondition"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingCancelCondition_Booking = new IbEm.EntityRelation(
      typeof(BookingCancelCondition),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { BookingCancelCondition.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_BookingCancelCondition_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingGuest"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingGuest_Booking = new IbEm.EntityRelation(
      typeof(BookingGuest),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { BookingGuest.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_BookingGuest_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingPayment"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingPayment_Booking = new IbEm.EntityRelation(
      typeof(BookingPayment),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { BookingPayment.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_BookingPayment_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="BookingReminder"/> and <see cref="Booking"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_BookingReminder_Booking = new IbEm.EntityRelation(
      typeof(BookingReminder),
      typeof(Booking),
       new IbEm.DataEntityProperty[] { BookingReminder.PropertyMetadata.BookingId},
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.BookingId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_BookingReminder_Booking");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Acco"/> and <see cref="AccoOwner"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Acco_AccoOwner = new IbEm.EntityRelation(
      typeof(Acco),
      typeof(AccoOwner),
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoOwnerId},
       new IbEm.DataEntityProperty[] { AccoOwner.PropertyMetadata.AccoOwnerId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_Acco_AccoOwner");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Acco"/> and <see cref="AccoPayPattern"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Acco_AccoPayPattern = new IbEm.EntityRelation(
      typeof(Acco),
      typeof(AccoPayPattern),
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.DefaultPayPatternId},
       new IbEm.DataEntityProperty[] { AccoPayPattern.PropertyMetadata.AccoPayPatternId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Acco_AccoPayPattern");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Acco"/> and <see cref="AccoRent"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Acco_AccoRent = new IbEm.EntityRelation(
      typeof(Acco),
      typeof(AccoRent),
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.BaseRentId},
       new IbEm.DataEntityProperty[] { AccoRent.PropertyMetadata.AccoRentId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Acco_AccoRent");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Acco"/> and <see cref="Country"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Acco_Country = new IbEm.EntityRelation(
      typeof(Acco),
      typeof(Country),
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.CountryId},
       new IbEm.DataEntityProperty[] { Country.PropertyMetadata.CountryId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.ZeroOrOne,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Acco_Country");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoAddition"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoAddition_Acco = new IbEm.EntityRelation(
      typeof(AccoAddition),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoAddition.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoAddition_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoAttachment"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoAttachment_Acco = new IbEm.EntityRelation(
      typeof(AccoAttachment),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoAttachment.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoAttachment_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoCancelCondition"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoCancelCondition_Acco = new IbEm.EntityRelation(
      typeof(AccoCancelCondition),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoCancelCondition.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoCancelCondition_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoDescription"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoDescription_Acco = new IbEm.EntityRelation(
      typeof(AccoDescription),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoDescription.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoDescription_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoNotification"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoNotification_Acco = new IbEm.EntityRelation(
      typeof(AccoNotification),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoNotification.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_AccoNotification_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoPayPattern"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoPayPattern_Acco = new IbEm.EntityRelation(
      typeof(AccoPayPattern),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoPayPattern.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoPayPattern_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoReminder"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoReminder_Acco = new IbEm.EntityRelation(
      typeof(AccoReminder),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoReminder.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoReminder_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoRent"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoRent_Acco = new IbEm.EntityRelation(
      typeof(AccoRent),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoRent.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoRent_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoSeason"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_AccoSeason_Acco = new IbEm.EntityRelation(
      typeof(AccoSeason),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoSeason.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_AccoSeason_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Booking"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Booking_Acco = new IbEm.EntityRelation(
      typeof(Booking),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { Booking.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_Booking_Acco");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="AccoSpecialOffer"/> and <see cref="Acco"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_SpecialOffer_Acco = new IbEm.EntityRelation(
      typeof(AccoSpecialOffer),
      typeof(Acco),
       new IbEm.DataEntityProperty[] { AccoSpecialOffer.PropertyMetadata.AccoId},
       new IbEm.DataEntityProperty[] { Acco.PropertyMetadata.AccoId},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.Cascade,
      "FK_SpecialOffer_Acco");
  }
  #endregion EntityRelations
}
